    | typing = dynamic typing, everything can be treated as a string | implementations = ActiveTcl | dialects = | influenced_by = | influenced = PowerShellWindows PowerShell : PowerShell and WPF: WTF&lt;!-- Bot generated title --&gt; | website = http://www.tcl.tk  Tcl (originally from "Tool Command Language", but nonetheless conventionally rendered as "Tcl" rather than "TCL"; pronounced as "tickle" or "tee-cee-ell"From the Tcler's Wiki Tcl vs. TCL) is a scripting language created by John Ousterhout. Originally "born out of frustration"From the inside flap of Tcl and the Tk Toolkit, ISBN 0-201-63337-X—according to the author—with programmers devising their own (poor quality) languages intended to be embedded into applications, Tcl quickly gained wide acceptance on its own and is generally thought to be easy to learn, but powerful in competent hands. It is most commonly used for rapid prototyping, scripted applications, GUIs and testing. Tcl is used extensively on embedded systems platforms, both in its full form and in several other small-footprinted versions. Tcl is also used for CGI scripting and as the scripting language for eggdrop bots.The combination of Tcl and the Tk GUI toolkit is referred to as Tcl/Tk.HistoryThe Tcl programming language was created in the spring of 1988 by John Ousterhout while working at the University of California, Berkeley.DateEventJanuary&nbsp;1990Tcl announced beyond Berkeley (Winter USENIX).June&nbsp;1990Expect announced (Summer USENIX).January&nbsp;1991Tk]] (Winter USENIX).June&nbsp;1993First Tcl/Tk conference (Berkeley). table geometry manager (forerunner of grid), Tcl, TclDP and Groupkit, announced there.September&nbsp;2002Ninth Tcl/Tk conference (Vancouver). Announcement of starkit packaging system.Tcl conferences and workshops are held in both the United States and Europe.FeaturesTcl's features include:Everything is a command, including language structures. They are in Prefix notation.Commands can be variadic.Everything can be dynamically redefined and overridden.All data types can be manipulated as strings, including code.Extremely simple syntactic rules.Event-driven interface to sockets and files. Time-based and user-defined events are also possible.Flexible scope, with variable visibility restricted to lexical (static) scope by default, but uplevel and upvar allowing procs to interact with the enclosing functions' scopes.Simple exception handling using exception code returned by all command executions.All commands defined by Tcl itself generate informative error messages on incorrect usage.Readily extensible, via C, C++, Java, and Tcl.Interpreted language using bytecode for improved speed whilst maintaining dynamic modifiabilityFull Unicode (3.1) support, first released 1999.Platform independent: Win32, UNIX, Linux, Mac, etc.Close integration with windowing (GUI) interface Tk.Easy to maintain code. Tcl scripts are often more compact and readable than functionally equivalent code in other languages.Can be used for many purposes, and in many environments: as a text-only scripted language, as a GUI-capable language for applications, as an embedded language in: web pages (server-side; or client-side, as Tclets), and databases (server-side, in PostgreSQL).Exists as development version (e. g. ActiveState Tcl), as tclkit (kind of runtime version, only about 1 megabyte in size), as starpack (single-file executable of a script/program), as BSD licensed freely distributable sourceTcl did not originally support object oriented syntax, being a functional language, but recent versions do support extensions which provide OO functionality, such as the XOTcl extension to Tcl. Other OO extensions also exist, such as incr Tcl, Snit, and STOOOP (simple tcl-only object-oriented programming).SyntaxA Tcl script consists of several commands. A command is a list of words separated by whitespace.word0 word1 word2 ... wordNThe first word is the name of a command, which is not built into the language, but which is in the library. The following words are arguments. So we have:commandName argument1 argument2 ... argumentNPractical example, using the puts command which outputs a string, adding a trailing newline, by default to the stdout channel: puts "Hello, world!" Any argument may be replaced by another command in square brackets. The subcommand is evaluated first and the result is substituted as the argument. Alternatively, any argument placed in curly braces will not be evaluated, but rather will be handed directly back to the original command as an argument.To summarize: there is one basic construct (the command) and a set of simple substitution rules, and only the square brackets, the curly braces, quotes, and the backslash have special meaning. The single equality sign (=) for example is not used at all, and the double equality sign (==) is the test for equality, and even then only in expression contexts such as the expr command or the first argument to if.All commands have the same structure: a keyword which is followed by several parameters. A command is terminated by a newline or a semicolon. Even comments are just commands which happen to do nothing.Tcl is not statically typed: each variable may contain integers, floats, strings, lists or any other value.Interfacing with other languages Tcl interfaces natively with the C language. C++ InteroperabilityJava InteroperabilityExtension packagesThe Tcl language has always supported extension packages, which provide additional functionality (such as a GUI, terminal-based application automation, database access, etc.)Tk The most popular Tcl extension is the Tk toolkit, which provides a graphical user interface library for a variety of operating systems. Each GUI consists of one or more frames. Each frame has a layout manager.Tile/TtkTile/Ttk is a styles and theming widget collection which can replace most of the widgets in Tk with variants which are truly platform native through calls to an operating system's API. Themes covered in this way are Windows XP, Windows Classic, Qt (which hooks into the X11 KDE environment libraries) and Aqua (Mac OS X). A theme can also be constructed without these calls using widget definitions supplemented with image pixmaps. Themes created this way include Classic Tk, Step, Alt/Revitalized, Plastik and Keramik.Under Tcl 8.4, this package is known as Tile, while in Tcl 8.5 it is included in the core distribution as Ttk.Itcl/IncrTclItcl is an object system for Tcl, and is normally named as Tcl (that being the way to increment in Tcl, similar in fashion to the name C++).TcllibTcllib is a set of scripted packages for Tcl that can be used with no compilation steps.DatabasesA number of database extensions are available:  tclodbcmk4tclSQLitePgtcl, pgintclmysqltcl, msqltclAdabasTclFBSQLibtclOratclSybtcldb2tcl and many, many others - see the Tcl/Tk Wiki, specifically the Tcl/Tk Wiki Database Category.See alsoEggdropExpectItclItkSnitTcllibTclXTkXOTclReferencesJohn K. Ousterhout, Tcl and the Tk Toolkit, Addison-Wesley, Reading, MA, USA, ISBN 0-201-63337-X, 1994.Brent B. Welch, Practical Programming in Tcl and Tk, Prentice Hall, Upper Saddle River, NJ, USA, ISBN 0-13-038560-3, 2003.J Adrian Zimmer, Tcl/Tk for Programmers, IEEE Computer Society, distributed by John Wiley and Sons, ISBN 0-8186-8515-8, 1998. Mark Harrison and Michael McLennan, Effective Tcl/Tk Programming, Addison-Wesley, Reading, MA, USA, ISBN 0-201-63474-0, 1998Mark Harrison (ed), Tcl/Tk Tools, O'Reilly Media, ISBN 1-56592-218-2, 1997NotesExternal linksMain Tcl developer sitesTcl Developer Xchange Main Tcl developer siteGetting started with TclTcl TutorialTcl Documentation, and Tcl Manual PagesHistory of Tcl by the creator of the language.Tcl'ers WikiDescription of Tcl's variable scoping rulesTcl distributionsActiveState's Tcl distribution for MS Windows, Mac OS X, Linux, Solaris, AIX, and HP-UX, with numerous libraries.WinTclTk open-source MinGW-based distribution for Microsoft Windows with extensionsTcl tutorials, books, etc.Tcl FAQA Tcl (Tutorial for Cool Languages) for Tcl/TkOlder Tcl Contributed Sources ArchiveOpen Directory: Tcl/TkTcl programming source code wiki at CodeCodexTclLink Tcl/Tk DirectoryCiteSeer CitationsA Short TCL TutorialTclwise, a book on Tcl programming with online chapters by Salvatore Sanfilippo.The Jim Interpreter, is a small footprint implementation of the Tcl programming language.An article on Software testing with Tcl for Apache RivetTcl for Web Nerds - A Tcl tutorial with emphasis on its use in web development.MyrmecoX Studio - An IDE for Tcl and Dynamic Languages Applications.Equi4 Software - Tclkits, Starkits, Starpacks, Metakit and moreTclBridge - ActiveX/COM integration for Tcl/Tk.http://www.tclscripting.com News and articles on software development with Tcl/TkTcl the misunderstood An essay describing the language's featuresThe Simple Development Library A collection of commands and utilities aimed towards assisting software development in Tcl.Puppy Linux (extensively uses Tcl/TK for systems administration and configuration) (Prior to Puppy version 4)Category:Scripting languages Category:Dynamically-typed programming languages Category:Tcl programming language family Category:Text-oriented programming languagesbg:Tcl ca:Tcl cs:Tcl de:Tcl es:Tcl eo:Tcl fr:Tool Command Language gl:TCL ko:Tcl is:Tcl it:Tcl la:Tcl ms:Tcl nl:TCL (programmeertaal) ja:Tcl/Tk no:Tcl pl:Tcl pt:Tcl ro:Tcl/TK ru:Tcl fi:TCL sv:Tcl vi:Tcl tg:Tcl tr:Tcl bug:Tcl uk:Tcl zh:Tcl