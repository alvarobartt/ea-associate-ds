In numerical analysis, the false position method or regula falsi method is a root-finding algorithm that combines features from the bisection method and the secant method.The methodLike the bisection method, the false position method starts with two points a''0 and ''b0 such that f''(''a0) and f''(''b0) are of opposite signs, which implies by the intermediate value theorem that the function f'' has a root in the interval [''a0, b''0]. The method proceeds by producing a sequence of shrinking intervals [''ak'', ''bk''] that all contain a root of ''f.At iteration number k, the number c_k = \frac is computed. As explained below, c''''k is the root of the secant line through (a''''k, f(a''''k)) and (b''''k, f(b''''k)). If f(a''''k) and f(c''''k) have the same sign, then we set a''''k+1 = c''''k and b''''k+1 = b''''k, otherwise we set a''''k+1 = a''''k and b''''k+1 = c''''k. This process is repeated until the root is approximated sufficiently well.The above formula is also used in the secant method, but the secant method always retains the last two computed points, while the false position method retains two points which certainly bracket a root. On the other hand, the only difference between the false position method and the bisection method is that the latter uses c''''k = (a''''k + b''''k) / 2.Finding the root of the secantGiven a''''k and b''''k, we construct the line through the points (a''''k, f''(''ak'')) and (''bk'', ''f(b''''k)), as demonstrated in the picture on the right. Note that this line is a secant or chord of the graph of the function f. In point-slope form, it can be defined as y - f(b_k) = \frac (x-b_k). We now choose c''''k to be the root of this line, so c is chosen such that f(b_k) + \frac (c_k-b_k) = 0. Solving this equation gives the above equation for c''''k.AnalysisIf the initial end-points a''0 and ''b0 are chosen such that f''(''a0) and f''(''b0) are of opposite signs, then one of the end-points will converge to a root of f. Asymptotically, the other end-point will remain fixed for all subsequent iterations while the one end-point always being updated. As a result, unlike the bisection method, the width of the bracket does not tend to zero. As a consequence, the linear approximation to f''(''x), which is used to pick the false position, does not improve in its quality.One example of this phenomenon is the function f(x) = 2x^3-4x^2+3x on the initial bracket &amp;minus;1,1. The left end, &minus;1, is never replaced and thus the width of the bracket never falls below 1. Hence, the right endpoint approaches 0 at a linear rate (with a rate of convergence of 2/3).While it is a misunderstanding to think that the method of false position is a good method, it is equally a mistake to think that it is unsalvageable. The failure mode is easy to detect (the same end-point is retained twice in a row) and easily remedied by next picking a modified false position, such as c_k = \fracf(b_k) a_k- f(a_k) b_kf(b_k)-f(a_k)or c_k = \fracf(a_k) b_kf(a_k)down-weighting one of the endpoint values to force the next ck to occur on that side of the function. The factor of 2 above looks like a hack, but it guarantees superlinear convergence (asymptotically, the algorithm will perform two regular steps after any modified step). There are other ways to pick the rescaling which give even better superlinear convergence rates.Ford (1995) summarizes and analyzes the superlinear variants of the modified method of false position. Judging from the bibliography, modified regula falsi methods were well known in the 1970s and have been subsequently forgotten or misremembered in current textbooks.Example codeThe following C code was written for clarity instead of efficiency. It was designed to solve the same problem as solved by the Newton's method and secant method code: to find the positive number x'' where cos(''x) = x''3. This problem is transformed into a root-finding problem of the form ''f(x'') = cos(''x) - x3 = 0.'''#include''' &lt;stdio.h&gt;
'''#include''' &lt;math.h&gt;
&amp;nbsp; 
'''double''' f('''double''' x)

&amp;nbsp;
'''double''' FalsiMethod('''double''' s, '''double''' t, '''double''' e, '''int''' m)

        '''else if''' (fs * fr &gt; 0)
        
        '''else break''';
    
    '''return''' r;

&amp;nbsp;
'''int''' main('''void''')
After running this code, the final answer is approximately 0.865474033101614HistoryThe oldest surviving document demonstrating knowledge and proficiency in the false position method is the Indian mathematical text Vaishali Ganit (c. 3rd century BC). The ancient Chinese mathematical text called The Nine Chapters on the Mathematical Art (九章算術) dated from 200 BC to AD 100 also mentions the algorithm. In this text, however, the example problems posed apply the false position method to linear equations only, and the solutions reached are arrived at in only one step. Leonardo of Pisa (Fibonacci) mentions false position in his book Liber Abaci published in AD 1202, following the method that he learned from Arab sources.ReferencesJ.A. Ford (1995), Improved Algorithms of Illinois-type for the Numerical Solution of Nonlinear Equations, Technical Report CSM-257, University of Essex, 1995Richard L. Burden, J. Douglas Faires (2000), "Numerical Analysis, (7th Ed)", Brooks/Cole. ISBN 0-534-38216-9L.E. Sigler, Fibonacci's Liber Abaci, Leonardo Pisno's Book of Calculation (2002), Springer-Verlag, New York, ISBN 0-387-40737-5.External linksThe Regula Falsi Method by John H. MathewsCategory:Root-finding algorithmsde:Regula Falsi es:Método de la regla falsa fr:Méthode de la fausse position it:Metodo di falsa posizione in Fibonacci nl:Regula falsi pl:Regula falsi fi:Regula falsi -menetelmä