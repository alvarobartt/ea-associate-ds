    groupware is a typical web application.]] In software engineering, a web application or webapp  is an application that is accessed via web browser over a network such as the Internet or an intranet. It is also a computer software application that is coded in a browser-supported language (such as HTML, JavaScript, Java, etc.) and reliant on a common web browser to render the application executable.Web applications are popular due to the ubiquity of a client, sometimes called a thin client. The ability to update and maintain web applications without distributing and installing software on potentially thousands of client computers is a key reason for their popularity. Common web applications include webmail, online retail sales, online auctions, wikis, massively multiplayer online role-playing games and many other functions.HistoryIn earlier types of client-server computing, each application had its own client program which served as its user interface and had to be separately installed on each user's personal computer. An upgrade to the server part of the application would typically require an upgrade to the clients installed on each user workstation, adding to the support cost and decreasing productivity.In contrast, web applications use web documents written in a standard format such as HTML (and more recently XHTML), which are supported by a variety of web browsers.Generally, each individual web page is delivered to the client as a static document, but the sequence of pages can provide an interactive experience, as user input is returned through web form elements embedded in the page markup. During the session, the web browser interprets and displays the pages, and acts as the universal client for any web application.In 1995, Netscape introduced a client-side scripting called JavaScript, which allowed programmers to add some dynamic elements to the user interface that ran on the client side. Until then, all the data had to be sent to the server for processing, and the results were delivered through static HTML pages sent back to the client.In 1996, Macromedia introduced Flash, a vector animation player that could be added to browsers as a plugin to embed animations on the web pages. It allowed the use of a scripting language to program interactions on the client side with no need to communicate with the server.In 1999, the "web application" concept was introduced in the Java language in the Servlet Specification version 2.2. 2.1?.  At that time both JavaScript and XML had already been developed, but AJAX had not still been coined and the XMLHttpRequest object had only been recently introduced on Internet Explorer 5 as an ActiveX object. In 2004, Web 2.0 was coined, and it was proposed to use the Web as a platform,  as opposed to simply developing applications that used Internet to communicate with the server.In 2005, AJAX was coined, and applications like Gmail started to make their client sides more and more interactive.Interfaceoperating system provides an interface for web applications.]] The web interface places very few limits on client functionality. Through Java, JavaScript, DHTML, Flash and other technologies, application-specific methods such as drawing on the screen, playing audio, and access to the keyboard and mouse are all possible. Many services have worked to combine all of these into a more familiar interface that adopts the appearance of an operating system. General purpose techniques such as drag and drop are also supported by these technologies. Web developers often use client-side scripting to add functionality, especially to create an interactive experience that does not require page reloading (which many users find disruptive). Recently, technologies have been developed to coordinate client-side scripting with server-side technologies such as PHP. Ajax, a web development technique using a combination of various technologies, is an example of technology which creates a more interactive experience.==Technical considerations== A significant advantage of building web applications to support standard browser features is that they should perform as specified regardless of the operating system or OS version installed on a given client. Rather than creating clients for MS Windows, Mac OS X, Linux, and other operating systems, the application can be written once and deployed almost anywhere. However, inconsistent implementations of the HTML, CSS, DOM and other browser specifications can cause problems in web application development and support. Additionally, the ability of users to customize many of the display settings of their browser (such as selecting different font sizes, colors, and typefaces, or disabling scripting support) can interfere with consistent implementation of a web application.Another approach is to use Adobe Flash or Java applets to provide some or all of the user interface. Since most web browsers include support for these technologies (usually through plug-ins), Flash- or Java-based applications can be implemented with much of the same ease of deployment. Because they allow the programmer greater control over the interface, they bypass many browser-configuration issues, although incompatibilities between Java or Flash implementations on the client can introduce different complications. Because of their architectural similarities to traditional client-server applications, with a somewhat "thick" client, there is some dispute over whether to call systems of this sort "web applications"; an alternative term is "Rich Internet Application" (RIA).StructureThough many variations are possible, a web application is commonly structured as a three-tiered application. In its most common form, a web browser is the first tier (presentation), an engine using some dynamic Web content technology (such as ASP, ASP.NET, CGI, ColdFusion, JSP/Java, PHP, embPerl, Python, or Ruby on Rails) is the middle tier (application logic), and a database is the third tier (storage). The web browser sends requests to the middle tier, which services them by making queries and updates against the database and generates a user interface.But there are some who view a web application as a two-tier architecture.Business useAn emerging strategy for application software companies is to provide web access to software previously distributed as local applications. Depending on the type of application, it may require the development of an entirely different browser-based interface, or merely adapting an existing application to use different presentation technology. These programs allow the user to pay a monthly or yearly fee for use of a software application without having to install it on a local hard drive. A company which follows this strategy is known as an application service provider (ASP), and ASPs are currently receiving much attention in the software industry.Writing web applicationsThere are many web application frameworks which facilitate rapid application development by allowing the programmer to define a high-level description of the program. In addition, there is potential for the development of applications on Internet operating systems, although currently there are not many viable platforms that fit this model.The use of web application frameworks can often reduce the number of errors in a program, both by making the code simpler, and by allowing one team to concentrate just on the framework. In applications which are exposed to constant hacking attempts on the Internet, security-related problems caused by errors in the program are a big issue. Frameworks may also promote the use of best practices such as GET after POST.Web application securityThe Web Application Security Consortium (WASC) and OWASP are projects developed with the intention of documenting how to avoid security problems in web applications. A web application security scanner is specialized software for detecting security problems in web applications.Applicationsapplication running in Mozilla Firefox.]] Browser applications typically include simple office software (word processors, online spreadsheets, and presentation tools), with Google Docs being the most notable example, and can also include more advanced applications such as project management, computer-aided design, and point-of-saleBenefitsBrowser applications typically require little or no disk space on the client, upgrade automatically with new features, integrate easily into other web procedures, such as email and searching. They also provide cross-platform compatibility (i.e., Windows, Mac, Linux, etc.) because they operate within a web browser window.DisadvantagesStandards compliance is an issue with any non-typical office document creator, which causes problems when file sharing and collaboration becomes critical. Also, browser applications rely on application files accessed on remote servers through the Internet. Therefore, when connection is interrupted, the application is no longer usable. Google Gears is a platform to ameliorate this issue and improve the usability of browser applications.See alsoReferencesExternal linksHTML 5 Draft recommendation, changes to HTML and related APIs to ease authoring of web-based applications.The Other Road Ahead &mdash; An article arguing that the future lies on the server, not rich interfaces on the clientWeb Applications in the Open Directory ProjectCategory:World Wide Web Category:Software architecture Category:Web applications Category:Web developmentar:تطبيق وب ca:Aplicació Web cs:Webová aplikace de:Webanwendung el:Διαδικτυακή εφαρμογή es:Aplicación web fr:Application web ko:웹 애플리케이션 id:Aplikasi web it:Applicazione Web nl:Webapplicatie ja:ウェブアプリケーション pl:Aplikacja webowa pt:Aplicação Web ru:Веб-приложение sk:Webová aplikácia fi:Web-sovellus th:เว็บแอปพลิเคชัน vi:Ứng dụng web zh:網頁應用程式