Data Encryption Standard (DES) es un algoritmo de cifrado, es decir, un método para cifrar información, escogido como FIPS en los Estados Unidos en 1976, y cuyo uso se ha propagado ampliamente por todo el mundo. El algoritmo fue controvertido al principio, con algunos elementos de diseño clasificados, una longitud de clave relativamente corta, y las continuas sospechas sobre la existencia de alguna puerta trasera para la National Security Agency (NSA). Posteriormente DES fue sometido a un intenso análisis académico y motivó el concepto moderno del cifrado por bloques y su criptoanálisis.Hoy en día, DES se considera inseguro para muchas aplicaciones. Esto se debe principalmente a que el tamaño de clave de 56 bits es corto; las claves de DES se han roto en menos de 24 horas. Existen también resultados analíticos que demuestran debilidades teóricas en su cifrado, aunque son inviables en la práctica. Se cree que el algoritmo es seguro en la práctica en su variante de Triple DES, aunque existan ataques teóricos.Desde hace algunos años, el algoritmo ha sido sustituido por el nuevo AES (Advanced Encryption Standard).En algunas ocasiones, DES es denominado también DEA (Data Encryption Algorithm).La Historia de DESLos orígenes de DES se remontan a principios de los 70. En 1972, tras terminar un estudio sobre las necesidades del gobierno en materia de seguridad informática, la autoridad de estándares estadounidense NBS (National Bureau of Standards) &mdash; ahora rebautizado NIST (National Institute of Standards and Technology) &mdash; concluyó en la necesidad de un estándar a nivel gubernamental para cifrar información confidencial. En consecuencia, el 15 de mayo de 1973, tras consultar con la NSA, el NBS solicitó propuestas para un algoritmo que cumpliera rigurosos criterios de diseño. A pesar de todo, ninguna de ellas parecía ser adecuada. Una segunda petición fue realizada el 27 de agosto de 1974. En aquella ocasión, IBM presentó un candidato que fue considerado aceptable, un algoritmo desarrollado durante el periodo 1973&ndash;1974 basado en otro anterior, el algoritmo Lucifer de Horst Feistel. El equipo de IBM dedicado al diseño y análisis del algoritmo estaba formado por Feistel, Walter Tuchman, Don Coppersmith, Alan Conheim, Carl Meyer, Mike Matyas, Roy Adler, Edna Grossman, Bill Notz, Lynn Smith, y Bryant Tuckerman.El papel de la NSA en el diseñoEl 17 de marzo de 1975, la propuesta de DES fue publicada en el Registro Federal. Se solicitaron comentarios por parte del público, y el año siguiente se abrieron dos talleres libres para discutir el estándar propuesto. Hubo algunas críticas desde ciertos sectores, incluyendo a los pioneros de la criptografía simétrica Martin Hellman y Whitfield Diffie, mencionando la corta longitud de la clave y las misteriosas S-cajas como una evidencia de la inadecuada interferencia de la NSA. La sospecha era que el algoritmo había sido debilitado de manera secreta por la agencia de inteligencia de forma que ellos &mdash; y nadie más &mdash; pudiesen leer mensajes cifrados fácilmente. Alan Konheim (uno de los diseñadores de DES) comentó en una ocasión "enviaron las S-cajas a Washington. Cuando volvieron eran totalmente diferentes." El Comité de Inteligencia del Senado de los Estados Unidos revisó las acciones de la NSA para determinar si había existido algún comportamiento inadecuado. En el resumen desclasificado sobre sus conclusiones, publicado en 1978, el Comité escribía: "En el desarrollo de DES, la NSA convenció a IBM de que un tamaño de clave reducido era suficiente; participó de forma indirecta en el desarrollo de las estructuras de las S-cajas; y certificó que, hasta donde ellos conocían, estaban libres de cualquier punto débil matemático o estadístico.". De todas formas, también concluyó que "La NSA no ejerció presión en el diseño del algoritmo en modo alguno. IBM inventó y diseñó el algoritmo, tomó todas las decisiones respecto a él, y coincidió en que el tamaño de la clave era más que apropiado para todas las aplicaciones comerciales para las que estaba pensado DES". Otro miembro del equipo de DES, Walter Tuchman, decía también: "Desarrollamos todo el algoritmo DES en IBM y con gente de IBM. ¡La NSA no dictó ni un sólo paso!".Algunas de las sospechas sobre puntos débiles ocultos en las S-cajas fueron descartadas en 1990, con el descubrimiento independiente y la publicación libre por Eli Biham y Adi Shamir del criptoanálisis diferencial, un método general para romper cifrados de bloque. Las S-cajas de DES eran mucho más resistentes al ataque que si hubiesen sido escogidas al azar, lo que sugería que IBM conocía la técnica allá en los 70. Éste era de hecho, el caso &mdash; en 1994, Don Coppersmith publicó los criterios de diseño originales para las S-cajas. IBM había descubierto el criptoanálisis diferencial en los 70 y, tras asegurar DES, la NSA les ordenó mantener en secreto la técnica. Coppersmith explica: "Esto era así porque el criptoanálisis diferencial puede ser una herramienta muy potente, contra muchos esquemas diferentes, y había la preocupación de que aquella información en dominio público podía afectar negativamente a la seguridad nacional". Shamir también comentó "Yo diría, al contrario de lo que algunos creen, que no hay evidencias de influencia alguna en el diseño de DES para que su estructura básica esté debilitada."Las otras críticas &mdash; sobre que la longitud de clave era demasiado corta &mdash; se fundaban en el hecho de que la razón dada por la NSA para reducir la longitud de la clave de 64 bits a 56 era que los 8 bits restantes podían servir como bits de paridad, lo que en cierto modo resultaba sospechoso. Es ampliamente aceptado que la decisión de la NSA estaba motivada por la posibilidad de que ellos podrían llevar a cabo un ataque por fuerza bruta contra una clave de 56 bits varios años antes que el resto del mundo.El algoritmo como estándarA pesar de la polémica, DES fue aprobado como estándar federal en noviembre de 1976, y publicado el 15 de enero de 1977 como FIPS PUB 46, autorizado para el uso no clasificado de datos. Fue posteriormente confirmado como estándar en 1983, 1988 (revisado como FIPS-46-1), 1993 (FIPS-46-2), y de nuevo en 1998 (FIPS-46-3), éste último definiendo "TripleDES" (véase más abajo). El 26 de mayo de 2002, DES fue finalmente reemplazado por AES (Advanced Encryption Standard), tras una competición pública (véase Proceso de Advanced Encryption Standard). Hasta hoy día (2006), DES continúa siendo ampliamente utilizado.Otro ataque teórico, el criptoanálisis lineal, fue publicado en 1994, pero fue un ataque por fuerza bruta en 1998 el que demostró que DES podría ser atacado en la práctica, y se destacó la necesidad de un algoritmo de repuesto. Éstos y otros métodos de criptoanálisis se comentan con más detalle posteriormente en este artículo.La introducción de DES es considerada como un desencadenador del estudio académico de la criptografía, en particular de los métodos para romper cifrados de bloque. Bruce Schneier escribe:"De puertas hacia dentro, la NSA ha visto a DES como uno de sus grandes errores. Si hubiesen sabido que los detalles serían publicados para que la gente pudiese escribir software, nunca hubieran estado de acuerdo. DES hizo más para galvanizar el campo de la criptografía que nunca nada antes. Ahora había un algoritmo que estudiar: uno que la NSA decía que era seguro."CronologíaFechaAñoEvento15 de mayo1973NBS publica una primera petición para un algoritmo estándar de cifrado27 de agosto1974NBS publica una segunda petición para algoritmos de cifrado17 de marzo1975DES es publicado en el Registro Federal para comentariosAgosto1976Primer taller sobre DESSeptiembre1976Segundo taller, sobre fundamentos matemáticos de DESNoviembre1976DES es aprobado como estándar15 de enero1977DES es publicado por el FIPS como estándar FIPS PUB 461983DES es confirmado por primera vez22 de enero1988DES es confirmado por segunda vez como FIPS 46-1, reemplazando a FIPS PUB 461992Biham y Shamir publican el primer ataque teórico con menos complejidad que el de fuerza bruta: el criptoanálisis diferencial. De cualquier modo, requiere una cantidad irreal de 247 textos planos escogidos (Biham and Shamir, 1992).30 de diciembre1993DES es confirmado por tercera vez como FIPS 46-21994Se lleva a cabo el primer criptoanálisis experimental de DES utilizando criptoanálisis lineal (Matsui, 1994).Julio1998El DES cracker de la EFF (Electronic Frontier Foundation) conocido como Deep Crack rompe una clave DES en 56 horas.Enero1999De forma conjunta, Deep Crack y distributed.net rompen una clave DES en 22 horas y 15 minutos.25 de octubre1999DES es confirmado por cuarta vez como FIPS 46-3, que específica la preferencia de uso de Triple DES, con DES simple permitido sólo en sistemas heredados.26 de noviembre2001El algoritmo AES (Advanced Encryption Standard) se publica como FIPS 19726 de mayo2002El estándar AES se hace efectivo26 de julio2004Se propone la retirada de FIPS 46-3 (y un par de estándares relacionados) en el Registro Federal http://edocket.access.gpo.gov/2004/04-16894.htmAlgoritmos de reemplazoMuchos de los anteriores usuarios de DES ahora utilizan Triple DES (3DES) que fue descrito y analizado en una de las patentes de DES (véase FIPS PUB 46-3); consiste en la aplicación de DES tres veces consecutivas con diferentes claves en cada una. 3DES ha sido ampliamente reconocido como seguro por ahora, aunque es bastante lento. Una alternativa más económica en términos computacionales es DES-X, que incrementa el tamaño de clave haciendo un XOR lógico sobre los elementos extra de la clave antes y después de DES. GDES fue una variante de DES propuesta para acelerar el proceso de cifrado, pero se demostró que era susceptible de ser sometido al criptoanálisis diferencial.En 2001, tras un concurso internacional, el NIST escogió un nuevo algoritmo: el AES (Advanced Encryption Standard), para reemplazar a DES. El algoritmo elegido para ser el AES fue propuesto por sus diseñadores bajo el nombre de Rijndael. Otros finalistas en la competición AES del NIST fueron RC6, Serpent, MARS, y Twofish.En general, no hay ningún algoritmo que se adapte perfectamente a todos los usos. Un algoritmo para uso en máquinas de uso general (por ejemplo, SSH, o algunos tipos de cifrado de correo electrónico), no siempre funciona bien en sistemas empotrados o tarjetas inteligentes, y viceversa.Descripciónright|170px|thumb|''Figura 1'' &amp;mdash; La estructura general de Feistel en DESPor brevedad, la descripción incluida a continuación omite las transformaciones y permutaciones exactas que especifica el algoritmo; para más información consultar DES material adicional.DES es el algoritmo prototipo del cifrado por bloques &mdash; un algoritmo que toma un texto en claro de una longitud fija de bits y lo transforma mediante una serie de complicadas operaciones en otro texto cifrado de la misma longitud. En el caso de DES el tamaño del bloque es de 64 bits. DES utiliza también una clave criptográfica para modificar la transformación, de modo que el descifrado sólo puede ser realizado por aquellos que conozcan la clave concreta utilizada en el cifrado. La clave mide 64 bits, aunque en realidad, sólo 56 de ellos son empleados por el algoritmo. Los ocho bits restantes se utilizan únicamente para comprobar la paridad, y después son descartados. Por tanto, la longitud de clave efectiva en DES es de 56 bits, y así es como se suele especificar.Al igual que otros cifrados de bloque, DES debe ser utilizado en el modo de operación de cifrado de bloque si se aplica a un mensaje mayor de 64 bits. FIPS-81 específica varios modos para el uso con DES, incluyendo uno para autenticación http://www.itl.nist.gov/fipspubs/fip81.htm. Se pueden consultar más documentos sobre el uso de DES en FIPS-74 http://www.itl.nist.gov/fipspubs/fip74.htm.Estructura básicaLa estructura básica del algoritmo aparece representada en la FIgura 1: hay 16 fases idénticas de proceso, denominadas rondas. También hay una permutación inicial y final denominadas PI y PF, que son funciones inversas entre sí (PI "deshace" la acción de PF, y viceversa). PI y PF no son criptográficamente significativas, pero se incluyeron presuntamente para facilitar la carga y descarga de bloques sobre el hardware de mediados de los 70. Antes de las rondas, el bloque es dividido en dos mitades de 32 bits y procesadas alternativamente. Este entrecruzamiento se conoce como esquema Feistel.La estructura de Feistel asegura que el cifrado y el descifrado sean procesos muy similares &mdash; la única diferencia es que las subclaves se aplican en orden inverso cuando desciframos. El resto del algoritmo es idéntico. Esto simplifica enormemente la implementación, en especial sobre hardware, al no haber necesidad de algoritmos distintos para el cifrado y el descifrado.El símbolo rojo "&oplus;" representa la operación OR exclusivo (XOR). La función-F mezcla la mitad del bloque con parte de la clave. La salida de la función-F se combina entonces con la otra mitad del bloque, y los bloques son intercambiados antes de la siguiente ronda. Tras la última ronda, las mitades no se intercambian; ésta es una característica de la estructura de Feistel que hace que el cifrado y el descifrado sean procesos parecidos.La función (F) de FeistelLa función-F, representada en la Figura 2, opera sobre medio bloque (32 bits) cada vez y consta de cuatro pasos: left|thumb|250px|''Figura 2'' &amp;mdash;La función Feistel (Función-F) de DESExpansión &mdash; la mitad del bloque de 32 bits se expande a 48 bits mediante la permutación de expansión, denominada E en el diagrama, duplicando algunos de los bits.Mezcla &mdash; el resultado se combina con una subclave utilizando una operación XOR. Dieciséis subclaves &mdash; una para cada ronda &mdash; se derivan de la clave inicial mediante la generación de subclaves descrita más abajo.Sustitución &mdash; tras mezclarlo con la subclave, el bloque es dividido en ocho trozos de 6 bits antes de ser procesados por las S-cajas, o cajas de sustitución. Cada una de las ocho S-cajas reemplaza sus seis bits de entrada con cuatro bits de salida, de acuerdo con una trasformación no lineal, especificada por una tabla de búsqueda Las S-cajas constituyen el núcleo de la seguridad de DES &mdash; sin ellas, el cifrado sería lineal, y fácil de romper.Permutación &mdash; finalmente, las 32 salidas de las S-cajas se reordenan de acuerdo a una permutación fija; la P-cajaAlternando la sustitución de las S-cajas, y la permutación de bits de la P-caja y la expansión-E proporcionan las llamadas "confusión y difusión" respectivamente, un concepto identificado por Claude Shannon en los 40 como una condición necesaria para un cifrado seguro y práctico.Generación de clavesright|thumb|220px|''Figura 3'' — La generación de clave de DES La Figura 3 representa la generación de claves para el cifrado &mdash; el algoritmo que se encarga de proporcionar las subclaves. Primero, se seleccionan 56 bits de la clave de los 64 iniciales mediante la Elección Permutada 1 (PC-1) &mdash; los ocho bits restantes pueden descartarse o utilizarse como bits de comprobación de paridad. Los 56 bits se dividen entonces en dos mitades de 28 bits; a continuación cada mitad se trata independientemente. En rondas sucesivas, ambas mitades se desplazan hacia la izquierda uno o dos bits (dependiendo de cada ronda), y entonces se seleccionan 48 bits de subclave mediante la Elección Permutada 2 (PC-2) &mdash; 24 bits de la mitad izquierda y 24 de la derecha. Los desplazamientos (indicados por "47 textos planos escogidos. DES fue diseñado para ser resistente al CD.El criptoanálisis lineal fue descubierto por Mitsuru Matsui, y necesita 243 textos planos conocidos (Matsui, 1993); el método fue implementado (Matsui, 1994), y fue el primer criptoanálisis experimental de DES que se dio a conocer. No hay evidencias de que DES fuese adaptado para ser resistente a este tipo de ataque. Una generalización del CL &mdash; el criptoanálisis lineal múltiple &mdash; se propuso en 1994 Kaliski and Robshaw), y fue mejorada por Biryukov y otros (2004); su análisis sugiere que se podrían utilizar múltiples aproximaciones lineales para reducir los requisitos de datos del ataque en al menos un factor de 4 (es decir, 241 en lugar de 243). Una reducción similar en la complejidad de datos puede obtenerse con una variante del criptoanálisis lineal de textos planos escogidos (Knudsen y Mathiassen, 2000). Junod (2001) realizó varios experimentos para determinar la complejidad real del criptoanálisis lineal, y descubrió que era algo más rápido de lo predicho, requiriendo un tiempo equivalente a 239&ndash;241 comprobaciones en DES.El ataque mejorado de Davies: mientras que el análisis lineal y diferencial son técnicas generales y pueden aplicarse a multitud de esquemas diferentes, el ataque de Davies es una técnica especializada para DES. Propuesta por vez primera por Davies en los 80, y mejorada por Biham and Biryukov (1997). La forma más potente del ataque requiere 250 textos planos conocidos, tiene una complejidad computacional de 250, y tiene un 51% de probabilidad de éxito.Existen también ataques pensados para versiones del algoritmo con menos rondas, es decir versiones de DES con menos de dieciséis rondas. Dichos análisis ofrecen una perspectiva sobre cuantas rondas son necesarias para conseguir seguridad, y cuánto «margen de seguridad» proporciona la versión completa. El criptoanálisis diferencial-lineal fue propuesto por Langford y Hellman en 1994, y combina criptoanálisis diferencial y lineal en un mismo ataque. Una versión mejorada del ataque puede romper un DES de 9 rondas con 215.8 textos planos conocidos y tiene una complejidad temporal de 229.2 (Biham y otros, 2002).Propiedades criptoanalíticasDES presenta la propiedad complementaria, dado queE_K(P)=C \Leftrightarrow E_\overline(\overline)=\overlinedonde \overline es el complemento a bit de x. E_K es el cifrado con la clave K. P y C son el texto plano y el texto cifrado respectivamente. La propiedad complementaria implica que el factor de trabajo para un ataque por fuerza bruta se podría reducir en un factor de 2 (o de un único bit) asumiendo un ataque con texto plano escogido.DES posee también cuatro claves débiles. El cifrado (E'') y el descifrado (''D) con una clave débil tienen el mismo efecto (véase involución):E_K(E_K(P)) = P o lo que es lo mismo, E_K = D_K. Hay también seis pares de claves semi-débiles. El cifrado con una de las claves de un par de claves semi-débiles, K_1, funciona de la misma manera que el descifrado con la otra, K_2:E_(E_(P)) = P o lo que es lo mismo, E_ = D_Es bastante fácil evitar las claves débiles y semi-débiles en la implementación, ya sea probándolas explícitamente, o simplemente escogiéndolas aleatoriamente; las probabilidades de coger una clave débil o semidébil son despreciables.Se ha demostrado también que DES no tiene estructura de grupo, o más concretamente, el conjunto \ (para todas las claves posibles K) no es un grupo, ni siquiera está "cerca" de ser un grupo (Campbell y Wiener, 1992). Ésta fue una cuestión abierta durante algún tiempo, y si se hubiese dado el caso, hubiera sido posible romper DES, y las modalidades de cifrado múltiple como Triple DES no hubiesen incrementado la seguridad.Véase tambiénCriptografía simétricaIDEATriple DESEnlaces externosDES algoritmo, cifrado y desciframiento - programado en C++Categoría:Cifrado por bloques Categoría:Criptosistemas simétricos Categoría:Criptografía Categoría:Data Encryption Standardbe-x-old:DES ca:DES cs:Data Encryption Standard da:Data Encryption Standard de:Data Encryption Standard el:Data Encryption Standard en:Data Encryption Standard eo:DES eu:DES fi:DES fr:Data Encryption Standard he:Data Encryption Standard hr:Data Encryption Standard id:Data Encryption Standard it:Data Encryption Standard ja:DES (暗号) ka:DES ko:DES (암호) lt:DES lv:Data Encryption Standard nl:Data Encryption Standard nn:DES no:DES pl:Data Encryption Standard pt:Data Encryption Standard ro:Data Encryption Standard ru:DES simple:Data Encryption Standard sk:Data Encryption Standard sl:DES sr:DES sv:Data Encryption Standard tg:DES tr:DES uk:Data Encryption Standard vi:DES (mã hóa) zh:DES