D es un lenguaje de programación de uso general desarrollado por Walter Bright cuya primera versión apareció en 1995, resultado de décadas de investigación y experiencia de programadores expertos en muchos lenguajes. Se origina como un rediseño de C++, con un enfoque más pragmático, pero no es un lenguaje puramente derivado del anterior. D ha mantenido algunas características de C++ y también está influido por otros conceptos de en otros lenguajes como Java, C# y Eiffel. Una versión estable fue lanzada el 2 de enero de 2007. Una versión experimental, 2.0, fue lanzada el 17 de junio de 2007.CaracterísticasD está siendo diseñado con lecciones aprendidas del uso de C++ en vez de ser diseñado desde una perspectiva teórica. Aunque usa muchos de los conceptos de C/C++ también descarta algunos, y por lo tanto no es compatible con código escrito en C o C++. D retiene la habilidad de C++ de hacer código de bajo nivel, permitiendo incluir código en ensamblador. La herencia múltiple de C++ es reemplazada por herencia simple e interfaces y 'mixins'. La sintaxis de declaración y la sintaxis para las expresiones se parecen a las de C++.El soporte del lenguaje ensamblador demuestra una de las diferencias entre D con respecto a otros lenguajes como Java y C#. Esto permite incluir código específico de la máquina con código D, una técnica comúnmente usada por programadores de software de sistema para acceder a características de bajo nivel necesarias para interactuar directamente con el hardware, permitiendo escribir software como sistemas operativos y drivers.D incluye soporte para comentarios de documentación, pero hasta ahora sólo el compilador entregado por Digital Mars implementa un generador de documentación.ParadigmasD soporta tres paradigmas: programación imperativa, orientada a objetos y metaprogramación.ImperativaLa programación imperativa en D es casi idéntica a la de C. Las funciones, datos, sentencias, declaraciones y expresiones trabajan como en C, y la biblioteca de C puede ser accedida directamente. Algunas diferencias con respecto a C en el área de la programación imperativa es la inclusión del bucle 'foreach', que permite recorrer una colección, y funciones anidadas, que son funciones que son declaradas dentro de otra función y puede acceder a las variables de la función en la que está incluida.Orientada a objetosLa programación orientada a objetos en D está basada en herencia simple, con todas las clases derivadas de la clase Object. D no soporta herencia múltiple; en vez de eso, usa interfaces parecidas a las de Java, que son comparables a las clases abstractas de C++.MetaprogramaciónMetaprogramación es soportada por una combinación de plantillas, ejecución de funciones en tiempo de compilación, tuplas y 'mixins' de cádena.Manejo de memoriaLa memoria es usualmente manejada por un recolector de basura, pero objetos específicos pueden ser finalizados inmediatamente cuando salen del ámbito. Manejo de memoria explícito es posible usando los operadores sobrecargados new y delete, y simplemente llamando las funciones malloc y free de C directamente. La recolección de basura puede ser controlada: los programadores pueden agregar y excluir rangos de memoria de ser observados por el recolector, pueden pausar y reanudar el recolector y forzar un ciclo generacional o de recolección completahttp://www.digitalmars.com/d/2.0/phobos/std_gc.html&lt;/ref&gt;. El manual da muchos ejemplos de cómo implementar diferentes esquemas de manejo de memoria altamente optimizados para cuando la recolección de basura es inadecuada para el programa.Interacción con otros sistemasLa ABI de C es admitida, al igual que todos los tipos fundamentales y derivados de C, permitiendo acceso directo al código existente escrito en C y bibliotecas. La biblioteca estándar de C es parte del D estándar. A menos que se usen namespaces muy explícitos puede ser de alguna forma difícil de acceder, como se puede observar en módulos escritos en D que hagan uso de dicha característica. Pero la biblioteca estándar de D es usualmente suficiente.ImplementaciónLas implementaciones actuales de D compilan el código directamente a código máquina para lograr una ejecución eficiente.Aunque D todavía está en desarrollo, cambios al lenguaje no se hacen regularmente desde la versión 1.0. El diseño está virtualmente congelado, y nuevos lanzamientos se concentran en resolver bugs existentes. La versión 1.0 no es completamente compatible con versiones antiguas del lenguaje y del compilador. El compilador oficial de Walter Bright define el lenguaje.DMD: El compilador de Digital Mars, el compilador oficial de D. El front end está bajo la licencia Artistic License y la licencia GNU GPL; las fuentes para el front end son distribuidas con los binarios del compilador. El back end es propietario.GDC: Un front end para el back end GCC, construido usando las fuentes del compilador DMD. Snapshots soportan la versión 2.0 del lenguaje.LLVMDC: Un nuevo compilador, también basado en DMD y usa la LLVM como back end. Está en fases iniciales.Herramientas de desarrolloD todavía no está soportado en muchos entornos de desarrollo, lo cual es un problema esencial para muchos usuarios. Editores que pueden ser usados incluyen a Entice Designer, emacs, vim, SciTE, Smultron y Zeus entre otros. Vim soporta el resaltado de sintaxis y completado de código (a través de ctags parcheados). Code::Blocks incluye soporte parical del lenguaje.Hay dos plu-gins en desarrollo para Eclipse, Descent y Mmrnmhrm.Adicionalmente, hay IDEs escritas en el propio D como Poseidon, que incluye completado de código, resaltado de sintaxis y depurador.Aplicaciones escritas en D pueden ser depuradas con cualquier depurador de C o C++, como GDB o WinDbg, aunque soporte para varias características fundamentales de D es limitado. Un depurador con soporte explícito para D es Ddbg para Windows. El depurador comercial ZeroBUGS para Linux tiene soporte experimental para D. Ddbg puede ser usado con varios IDEs o desde la línea de comandos, ZeroBUGS tiene su propia interfaz gráfica.Problemas y controversiasSobrecarga de operadoresLa sobrecarga de operadores en D a veces son menos poderosas que las de C++. Un ejemplo es el opIndex, que sufre porque D no permite regresar referencias. Esto hace operaciones como obji++; imposibles. La solución parcial de D es el operador opIndexAssign, que solo repara casos donde la expresión indexeada es solo un valor L como obji = 5 pero no los casos originales.División en la biblioteca estándarLa biblioteca estándar en D es llamada Phobos. Algunos miembros de la comunidad piensan que Phobos es demasiado simple y que posee numerosos problemas, por lo cual un reemplazo llamado Tango fue escritoWiki4D: Standard Lib. Sin embargo, Tango y Phobos son por el momento incompatibles debido a varias diferencias (soporte de hilos, recolector de basura, etc). La existencia de dos bibliotecas, ambas de uso elevado, puede llevar a problemas significativos donde algunos paquetes usan Phobos y otros usan Tango.Soporte sin finalizar para bibliotecas compartidas/dinámicasBibliotecas compartidas ELF de Unix son soportadas hasta un punto usando el compilador GDC. En Windows, DLLs son soportadas y permiten a objetos recolectados por el recolector de basura de ser seguramente pasados a funciones de C, ya que el recolector de basura revisa el stack por punteros. Sin embargo, todavía hay limitaciones con DLLs en D incluyendo el hecho de que la información en tiempo de ejecución de clases definidas en la DLL es incompatible con esas definidas en el ejecutable, y que cualquier objeto creado desde la DLL debe ser finalizado antes de que la DLL sea descargadahttp://www.prowiki.org/wiki4d/wiki.cgi?BestPractices/DLL&lt;/ref&gt;.ReferenciasEnlaces externosDigital Mars: D programming languageDSource, una comunidad open source del lenguaje D.Dprogramming.com, casa de la biblioteca DFLWiki4D, una wiki sobre el lenguaje Dgdc, D front-end for GCCThe Computer Language Benchmarks GameD Wiki de documentaciónTabla de las características de DVideo de presentación de D por Walter BrightDdbg - Depurador de D para WindowsDWin - biblioteca para el lenguaje DDLogo - logos, botones y banners para DSciTE4D - Editor de texto para DD Programming Language China Foro chino para el soporte sobre DComputerworld Interview with Walter Bright on D Programming LanguageC Categoría:Programación Imperativa Cbg:D (език за програмиране) ca:Llenguatge D cs:D (programovací jazyk) de:D (Programmiersprache) en:D (programming language) eo:D (programlingvo) fi:D (ohjelmointikieli) fr:D (langage) gl:Linguaxe de programación D hu:D programozási nyelv id:D (bahasa pemrograman) it:D (linguaggio di programmazione) ja:D言語 ko:D (프로그래밍 언어) ms:Bahasa pengaturcaraan D nl:D (programmeertaal) pl:D (język programowania) pt:D (linguagem de programação) ru:D (язык программирования) sk:D (programovací jazyk) sv:D (programspråk) tr:D programlama dili zh:D語言