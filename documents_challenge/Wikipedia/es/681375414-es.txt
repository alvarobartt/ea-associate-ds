right|200px|Ciclos de desarrolloScrum es un proceso de desarrollo de software iterativo e incremental utilizado comúnmente en entornos basado en la metodología Agile de desarrollo de software.Aunque Scrum estaba enfocado a la gestión de procesos de desarrollo de software, puede ser utilizado en equipos de mantenimiento de software, o en una aproximación de gestión de programas: Scrum de Scrums.HistoriaEn 1986, Hirotaka Takeuchi e Ikujiro Nonaka describieron una nueva aproximación holística que incrementa la rapidez y la flexibilidad en el desarrollo de nuevos productos comerciales:Takeuchi and Nonaka: The New New Product Development Game (Harvard Business Review, Jan-Feb 1986)Ellos comparan esta nueva aproximación holística, en la cual las fases se solapan de manera intensa y el proceso completo es realizado por un equipo con funciones transversales, como con el rugby, donde el equipo entero "actúa como un solo hombre para intentar llegar al otro lado del campo, pasando el balón de uno a otro".Los casos de estudio provienen de las industrias automotriz, así como de fabricación de máquinas fotográficas, computadoras e impresoras.En 1991, DeGrace y Stahl, en su libro Wicked Problems, Righteous Solutions (A problemas malvados, soluciones virtuosas),Peter DeGrace, Leslie Hulet Stahl, Wicked problems, righteous solutions, 1990, ISBN 0-13-590126-X se refirieron a esta aproximación como Scrum (meleé en inglés), un término propio del rugby mencionado en el artículo por Takeuchi y Nonaka.A principio de los 90, Ken Schwaber empleó una aproximación que lo llevó a poner en práctica Scrum en su compañía, Advanced Development Methods.Por aquel tiempo, Jeff Sutherland desarrolló una aproximación similar en Easel Corporation y fue el primero en denominarla Scrum.Jeff Sutherland, AGILE DEVELOPMENT: LESSONS LEARNED FROM THE FIRST SCRUM, 2004En 1995, Sutherland y Schwaber, durante el OOPSLA '95, desarrollado en Austin; presentaron en paralelo una serie de artículo describiendo Scrum, siendo esta la primera aparición pública de la metodología. Durante los años siguientes, Schwaber y Sutherland, colaboraron para consolidar los artículos antes mencionados, así como sus experiencias y el conjunto de mejores prácticas de la industria que conforman a lo que ahora se le conoce como Scrum.En 2001, Schwaber y Mike Beedle escribieron la metodología en el libro Agile Software Development with SCRUM.Características de ScrumScrum es un modelo de referencia que define un conjunto de prácticas y roles, y que puede tomarse como punto de partida para definir el proceso de desarrollo que se ejecutara durante un proyecto. Los roles principales en Scrum son el ScrumMaster, que mantiene los procesos y trabaja de forma similar al director de proyecto, el ProductOwner, que representa a los stakeholders (clientes externos o internos), y el Team que incluye a los desarrolladores.Durante cada sprint, un periodo entre 15 y 30 días (la magnitud es definida por el equipo), el equipo crea un incremento de software potencialmente entregable (utilizable). El conjunto de características que forma parte de cada sprint viene del Product Backlog, que es un conjunto de requisitos de alto nivel priorizados que definen el trabajo a realizar. Los elementos del Product Backlog que forman parte del sprint se determinan durante la reunión de Sprint Planning. Durante esta reunión, el Product Owner identifica los elementos del Product Backlog que quiere ver completados y los hace del conocimiento del equipo. Entonces, el equipo determina la cantidad de ese trabajo que puede comprometerse a completar durante el siguiente sprint.Agile Project Management with Scrum, Ken Schwaber, Microsoft Press, January 2004, 163pp, ISBN 0-7356-1993-X Durante el sprint, nadie puede cambiar el Sprint Backlog, lo que significa que los requisitos están congelados durante el sprint.Existen varias implementaciones de sistemas para gestionar el proceso de Scrum, que van desde notas amarillas "post-it" y pizarras hasta paquetes de software. Una de las mayores ventajas de Scrum es que es muy fácil de aprender, y requiere muy poco esfuerzo para comenzarse a utilizar.Roles en ScrumEn Scrum se definen varios roles, estos están divididos en dos grupos: cerdos y gallinas. El nombre de los grupos están inspirados en el chiste sobre un cerdo y una gallina que se relata a continuación.page 7  Un cerdo y una gallina se encuentran en la calle. La gallina mira al cerdo y dice: "Hey, ¿por qué no abrimos un restaurante?" El cerdo mira a la gallina y le dice: "Buena idea, ¿cómo se llamaría el restaurante?" La gallina piensa un poco y contesta: "¿Por qué no lo llamamos "Huevos con jamón?" "Lo siento pero no", dice el cerdo, "Yo estaría comprometido pero tú solamente estarías involucrada". De esta forma, los cerdos están comprometidos a construir software de manera regular y frecuente, mientras que el resto son gallinas: interesados en el proyecto pero realmente irrelevantes porque, si éste falla, no son un cerdo, es decir, no son los que se habían comprometido a sacarlo adelante. Las necesidades, deseos, ideas e influencias de los roles gallina se tienen en cuenta, pero no de forma que pueda afectar, distorsionar o entorpecer el proyecto Scrum.Roles &quot;Cerdo&quot;Los Cerdos son los que están comprometidos con el proyecto y el proceso Scrum; ellos son los que "ponen el jamón en el plato".Product OwnerEl Product Owner representa la voz del cliente. Se asegura de que el equipo Scrum trabaja de forma adecuada desde la perspectiva del negocio. El Product Owner escribe historias de usuario, las prioriza, y las coloca en el Product Backlog.ScrumMaster (o Facilitador)El Scrum es facilitado por un ScrumMaster, cuyo trabajo primario es eliminar los obstáculos que impiden que el equipo alcance el objetivo del sprint. El ScrumMaster no es el líder del equipo (porque ellos se auto-organizan), sino que actúa como una protección entre el equipo y cualquier influencia que le distraiga. El ScrumMaster se asegura de que el proceso Scrum se utiliza como es debido. El ScrumMaster es el que hace que las reglas se cumplan.EquipoEl equipo tiene la responsabilidad de entregar el producto. Un pequeño equipo de 5 a 9 personas con las habilidades transversales necesarias para realizar el trabajo (diseñador, desarrollador, etc).Roles &quot;Gallina&quot;Los roles gallina en realidad no son parte del proceso Scrum, pero deben tenerse en cuenta. Un aspecto importante de una aproximación Ágil es la práctica de involucrar en el proceso a los usuarios, expertos del negocio y otros interesados (stakeholders). Es importante que esa gente participe y entregue retroalimentación con respecto a la salida del proceso a fin de revisar y planear de cada sprint.Usuarios¡El software es construido para alguien! Si el software no es usado - como la paradoja del árbol que cae en el bosque cuando no hay nadie ¿hace ruido? - ¿fue alguna vez escrito?.Stakeholders (Clientes, Proveedores)Se refiere a la gente que hace posible el proyecto y para quienes el proyecto producirá el beneficio acordado que lo justifica. Sólo participan directamente durante las revisiones del sprint.ManagersEs la gente que establece el ambiente para el desarrollo del producto.Reuniones en ScrumCada día de un sprint, se realiza la reunión sobre el estado de un proyecto. Esto se llama un scrum o la "daily standup". El scrum tiene unas guías específicas:La reunión comienza puntualmente a su hora. A menudo hay castigos -decididos por el equipo- para quién llega tarde (por ejemplo: dinero, flexiones, llevar colgando una gallina de plástico del cuello)Todos son bienvenidos, pero solo los "cerdos" pueden hablarLa reunión tiene una duración fija de 15 minutos, de forma independiente del tamaño del equipo.Todos los asistentes deben mantenerse de pie (esto ayuda a mantener la reunión corta)La reunión debe ocurrir en la misma ubicación y a la misma hora todos los días.Durante la reunión, cada miembro del equipo contesta a tres preguntas:page 135¿Qué has hecho desde ayer?¿Qué es lo que estás planeando hacer mañana?¿Has tenido algún problema que te haya impedido alcanzar tu objetivo? (Es el papel del ScrumMaster recordar estos impedimentos).Después de cada sprint, se lleva a cabo una retrospectiva del sprint, en la cual todos los miembros del equipo dejan sus impresiones sobre el sprint recién superado. El propósito de la retrospectiva es realizar una mejora continua del proceso. Esta reunión tiene un tiempo fijo de cuatro horas.Scrum permite la creación de equipos autoorganizados impulsando la co-localización de todos los miembros del equipo, y la comunicación verbal entre todos los miembros y disciplinas involucrados en el proyecto.Un principio clave de Scrum es el reconocimiento de que durante un proyecto los clientes pueden cambiar de idea sobre lo que quieren y necesitan (a menudo llamado requirements churn), y que los desafíos impredecibles no pueden ser fácilmente enfrentados de una forma predictiva y planificada. Por lo tanto, Scrum adopta una aproximación pragmática, aceptando que el problema no puede ser completamente entendido o definido, y centrándose en maximizar la capacidad del equipo de entregar rápidamente y responder a requisitos emergentes.DocumentosProduct backlogEl product backlog es un documento de alto nivel para todo el proyecto. Contiene amplias descripciones de todas las características requeridas, funcionalidades en la wish-list, etcétera. Es el "qué" va a ser construido. Es abierto y editable por todo el mundo. Contienen estimaciones burdas, normalmente en días. Esta estimación ayuda al Product Owner a ajustar la línea temporal y, de manera limitada, la prioridad (por ejemplo, si "añadir corrector ortográfico" está estimada en 3 días frente a 3 meses, eso podría afectar a los deseos del Product Owner.Sprint backlogEl sprint backlog es un documento detallado donde se describe el cómo el equipo va a implementar los requisitos durante el siguiente sprint. Las tareas se dividen en horas con ninguna tarea de duración superior a 16 horas. Si una tarea es mayor de 16 horas, deberá ser rota en mayor detalle. Las tareas en el sprint backlog nunca son asignadas, son tomadas por los miembros del equipo del modo que les parezca oportuno.Burn downLa burn down chart es una gráfica mostrada públicamente que mide la cantidad de requisitos en el Backlog del proyecto pendientes al comienzo de cada Sprint. Dibujando una línea que conecte los puntos de todos los Sprints completados, podremos ver el progreso del proyecto. Lo normal es que esta línea sea descendente (en casos en que todo va bien en el sentido de que los requisitos están bien definidos desde el prinicipio y no varían nunca) hasta llegar al eje horizontal, momento en el cual el proyecto se ha terminado (no hay más requisitos pendientes de ser completados en el Backlog). Si durante el proceso se añaden nuevos requisitos la recta tendrá pendiente ascendente en determinados segmentos, y si se modifican algunos requisitos la pendiente variará o incluso valdrá cero en algunos tramos.Scrum aplicado al desarrollo de softwareAunque surgió como modelo para el desarrollo de productos tecnológicos, también se emplea en entornos que trabajan con requisitos inestables y que requieren rapidez y flexibilidad; situaciones frecuentes en el desarrollo de determinados sistemas de software.Jeff Sutherland aplicó el modelo Scrum al desarrollo de software en 1993 en Easel Corporation (Empresa que en los macro-juegos de compras y fusiones se integraría en VMARK, luego en Informix y finalmente en Ascential Software Corporation). En 1996 lo presentó junto con Ken Schwaber como proceso formal, también para gestión del desarrollo de software en OOPSLA 96. Más tarde, en 2001 serían dos de los promulgadores del Manifiesto ágil. En el desarrollo de software scrum está considerado como modelo ágil por la Agile Alliance.right|200px|Ficha sinópticaLa ficha adjunta incluye una descripción sinóptica del proceso y sus elementos que son:Roles: Propietario del producto, Gestor o Manager del Scrum, Equipo e Interesados.Componentes del proceso: Pila del producto (Product Backlog), Pila del sprint (Sprint Backlog), Incremento.Reuniones:Planificación del sprint, Revisión diaria, Revisión del sprint.SprintVéase tambiénCiclo de vida del productoDesarrollo ágil de softwareDesarrollo de softwareAgilmáticaEnlaces externos[http://www.proyectosagiles.org proyectosAgiles.org: base de conocimiento gratuita de Scrum en español]Curso gratis de ScrumPlataforma profesional de conocimiento libre ScrumManagerLibro gratuito sobre ScrumMetodología de gestión de proyectos basada en ScrumArtículos sobre Scrum de Rodrigo CorralHoja Excel para gráficos de progreso scrumArtículo de introducción a ScrumExplicando Scrum a mi abuela por Jorge SerranoBlog de Scrum en EspañolArtículo sobre Scrum en EspañolReferencias[http://members.cox.net/risingl1/Articles/IEEEScrum.pdf (PDF) Rising, L., Janoff, N.S. (2000). The Scrum Software Development Process for Small Teams] Retrieved March 15, 2007[http://jeffsutherland.com/oopsla/schwapub.pdf (PDF) Schwaber, K. Advanced Development Methods. SCRUM Development Process] Retrieved August 15, 2006[http://video.google.com/videoplay?docid=8795214308797356840 (video) Jeff Sutherland in Scrum Tuning: Lessons learned from Scrum implementation at Google] Retrieved 2007-12-15[http://video.google.com/videoplay?docid=2531954797594836634 (video) Ken Schwaber in Scrum et al.] Retrieved 2008-01-19Categoría:Ingeniería de software Categoría:Gestión de proyectosbg:Scrum da:Scrum de:Scrum en:Scrum (development) fi:Scrum fr:Scrum he:Scrum hu:Scrum it:Scrum ja:スクラム (ソフトウェア開発) ko:스크럼 (애자일 개발 프로세스) lt:Scrum nl:Scrum (softwareontwikkelmethode) no:Scrum pl:Scrum pt:Scrum ru:Scrum sh:Scrum sv:Scrum uk:Scrum zh:Scrum