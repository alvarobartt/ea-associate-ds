OpenSSH (Open Secure Shell) es un conjunto de aplicaciones que permiten realizar comunicaciones cifradas a través de una red, usando el protocolo SSH. Fue creado como una alternativa libre y abierta al programa Secure Shell, que es software propietario. El proyecto está liderado por Theo de Raadt, de Calgary.HistoriaSus desarrolladores aseguran que OpenSSH es más seguro que el original, lo cual es debido a la conocida reputación de los desarrolladores de OpenBSD por crear código limpio y perfectamente auditado, lo que contribuye a que sea más seguro. Su seguridad también es atribuible al hecho de que su código fuente se distribuya libremente con una licencia BSD. Aunque todo el código fuente del SSH original también está disponible, existen restricciones con respecto a su uso y distribución, lo que convierte a OpenSSH en un proyecto mucho más atractivo a la hora de atraer nuevos desarrolladores.La primera vez que apareció OpenSSH fue en la versión OpenBSD 2.6 y la primera versión independiente fue realizada en Octubre 1999.Freshmeat announcement: Portable OpenSSH 1.0pre2Historia de las liberaciones :OpenSSH 5.1: Junio 21, 2008OpenSSH 5.0: Abril 3, 2008OpenSSH 4.9: Marzo 30, 2008Incorporo soporte chrootpara sshdOpenSSH 4.7: Septiembre 4, 2007OpenSSH 4.6: Marzo 9, 2007OpenSSH 4.5: Noviembre 7, 2006OpenSSH 4.4: Septiembre 27, 2006OpenSSH 4.3: Febrero 1, 2006OpenSSH 4.2: Septiembre 1, 2005OpenSSH 4.1: May 26, 2005OpenSSH 4.0: Marzo 9, 2005OpenSSH 3.9: Agosto 17, 2004OpenSSH 3.8: Febrero 24, 2004OpenSSH 3.7.1: Septiembre 16, 2003OpenSSH 3.7: Septiembre 16, 2003OpenSSH 3.6.1: Abril 1, 2003OpenSSH 3.6: Marzo 31, 2003OpenSSH 3.5: Octubre 14, 2002OpenSSH 3.4: Junio 26, 2002PortabilidadComo OpenSSH es una aplicación de comunicación entre ordenadores, debe funcionar en la mayor cantidad de sistemas operativos posibles, para lo que existe un equipo, llamado OpenSSH Portability Team que se responsabiliza de añadir el código necesario para portar el software a todas las plataformas posibles.Aplicaciones incluidasLa suite OpenSSH incluye:ssh, reemplaza a rlogin y telnet para permitir shell el acceso remoto a otra máquina. ssh tero@ejemplo.comscp, reemplaza a rcp scp tero@ejemplo.com:~/archivo .sftp, reemplaza aftp para copiar archivos entre dos computadoras sftp tero@ejemplo.comsshd, el servidor demonio SSH sshdssh-keygen, una herramienta para inspeccionar y generar claves RSA y DSA que son usadas para la autenticación del cliente o usuario.ssh-agent y ssh-add, herramientas para autenticarse de manera mas fácil, manteniendo las claves listas para no tener que volver a introducir la frase de acceso cada ves que utilice la calve.ssh-keyscan, que escanea una lista de clientes y recolecta sus claves públicas.El servidor OpenSSH puede autenticar a los usuarios mediante todos los métodos estándar del protocolo sshTúneles segurosMuchas aplicaciones pueden ser securizadas con OpenSSH, haciendo de este sistema una potente alternativa para sistemas VPN.Cualquier aplicación que use conexiones por TCP (preferiblemente con un sólo puerto tcp) puede ser utilizada a través de túnel seguro- Algunos ejemplos de aplicaciones fácilmente tunelizables son el X Window System, http usando un proxy y VNC. El túnel para el X Window System se crea automáticamente entre dos ordenadores corriendo Unix, así que las aplicaciones con interfaz gráfico pueden ser ejecutadas desde ordenadores remotos simplemente escribiendo su nombres: ssh -Y tero@ejemplo.com
 password:
 $xclockEntre las aplicaciones cuya tunelización es posible, aunque compleja, se encuentran el ftp (no es necesario, debido a la existencia de sftp) y SMB.Algunas aplicaciones llaman a OpenSSH para crear el túnel, tales como DistCC, CVS, rsync y fetchmail.Se pueden montar sistemas de archivos remotos a través de ssh usando shfs, lufs o podfuk.AutenticaciónEl servidor OpenSSH autentica a los usuarios usando sus propios sistemas de autenticación, implementados en el propio software:Clave pública (id.rsa, authorized_keys)ContraseñaKerberos/GSSAPIOpenSSH también puede usar PAM para llevar a cabo la autenticación. PAM permite la selección de métodos de autenticación y su política en tiempo de ejecución, permitiendo métodos avanzados de autenticación tales como:OTPWS/KEYOPIELas versiones de OpenSSH más antiguas que la 3.7 deben ser ejecutadas como root siempre que el soporte PAM esté activado, ya que se requieren permisos de root para activar el PAM. Las versiones más recientes de OpenSSH permiten desactivar el uso de PAM estando en ejecución. Mediante este sistema usuarios normales pueden ejecutar instancias de sshd.LibrosMichael Stahnke, Pro OpenSSH. (Inglés) ISBN 1-59059-476-2.Daniel J. Barrett, Richard E. Silverman, and Robert G. Byrnes, SSH, The Secure Shell: The Definitive Guide, Second Edition. ISBN 0-596-00895-3 (Inglés, primera edición ISBN 0-596-00011-1).ReferenciasEnlaces externosPágina de OpenSSH (Español)Distribuciones portables (Inglés)videotutorial de Open SSH (Español)Véase tambiénCategoría:BSD Categoría:OpenBSD Categoría:Criptografía Categoría:Protocolos de Internet Categoría:Redes informáticas Categoría:Seguridad informática Categoría:Acrónimos de informáticabs:OpenSSH cs:OpenSSH de:OpenSSH en:OpenSSH fr:OpenSSH it:OpenSSH ja:OpenSSH lv:OpenSSH nl:OpenSSH pl:OpenSSH pt:OpenSSH ru:OpenSSH sv:OpenSSH zh:OpenSSH