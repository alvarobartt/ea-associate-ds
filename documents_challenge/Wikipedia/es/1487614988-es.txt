Éste es un artículo sobre Teoría de Juegos. Para el canal de cable vea Minimax (infantil)En teoría de juegos, Minimax es un método de decisión para ''mini''mizar la pérdida ''máx''ima esperada en juegos con adversario y con información perfecta. Minimax es un algoritmo recursivo.El funcionamiento de Minimax puede resumirse como elegir el mejor movimiento para ti mismo suponiendo que tu contrincante escogerá el peor para ti.Algoritmo Minimax con movimientos alternativosright|300px Pasos del algoritmo Minimax:Generación del árbol de juego. Se generarán todos los nodos hasta llegar a un estado terminal.Cálculo de los valores de la función de utilidad para cada nodo terminal.Calcular el valor de los nodos superiores a partir del valor de los inferiores. Alternativamente se elegirán los valores mínimos y máximos representando los movimientos del jugador y del oponente, de ahí el nombre de Minimax.Elegir la jugada valorando los valores que han llegado al nivel superior.El algoritmo explorará los nodos del árbol asignándoles un valor numérico mediante una función de utilidad, empezando por los nodos terminales y subiendo hacia la raíz. La función de utilidad definirá lo buena que es la posición para un jugador cuando la alcanza. En el caso del ajedrez los posibles valores son (+1,0,-1) que se corresponden con ganar, empatar y perder respectivamente. En el caso del backgammon los posibles valores tendrán un rango de +192,-192, correspondiéndose con el valor de las fichas. Para cada juego pueden ser diferentes.Si Minimax se enfrenta con el dilema del prisionero escogerá siempre la opción con la cual maximiza su resultado suponiendo que el contrincante intenta minimizarlo.EjemploEn el siguiente ejemplo puede verse el funcionamiento de Minimax en un árbol generado para un juego imaginario. Los posibles valores de la función de utilidad tienen un rango de 1-9. En los movimientos del contrincante suponemos que escogerá los movimientos que minimicen nuestra utilidad, en nuestros movimientos suponemos que escogeremos los movimientos que maximizan nuestra utilidad.El primer paso será calcular los nodos terminales, en verde. Posteriormente calcularemos el cuarto nivel, movimiento min, minimizando lo elegido (5, 2 y 1). Después podremos calcular el tercer nivel, movimiento max, maximizando la utilidad (5, 9). El segundo nivel es un movimiento min (5, 3 y 1). Finalmente llegamos al primer nivel, el movimiento actual, elegiremos el nodo que maximice nuestra utilidad (5).Archivo:Minimax2.pngOptimizaciónEn la práctica el método Minimax es impracticable excepto en supuestos sencillos. Realizar la búsqueda completa requerirían cantidades excesivas de tiempo y memoria.Claude Shannon en su texto sobre ajedrez de 1950 (Programming a Computer for Playing Chess) propuso limitar la profundidad de la búsqueda en el árbol de posibilidades y determinar su valor mediante una función heurística. Para optimizar Minimax puede limitarse la búsqueda por nivel de profundidad o por tiempo de ejecución. Otra posible técnica es el uso de la poda alfa-beta. Esta optimización se basa en la suposición que el jugador contrario no nos permitirá jugar nuestras mejores jugadas.Enlaces externosEjemplo de implementacion de MINIMAX en Clisp .Categoría:Teoría de juegos Categoría:Algoritmos de grafos Categoría:Algoritmos de búsquedacs:Minimax (algoritmus) de:Minimax-Algorithmus en:Minimax fr:Algorithme MinMax he:עץ מינימקס id:Minimax it:Minimax ja:ミニマックス法 nl:Minimax pl:Algorytm min-max pt:Minimax ru:Минимаксный критерий uk:Мінімакс vi:Minimax zh:极小化极大算法