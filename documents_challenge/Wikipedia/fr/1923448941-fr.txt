La suite de Fibonacci est une suites d'entiers très connue. Elle doit son nom au mathématicien italien Leonardo Pisano, plus connu sous le pseudonyme de Fibonacci (1175 - 1250). Dans un problème récréatif posé dans un de ses ouvrages, le Liber Abaci, Fibonacci décrit la croissance d'une population de lapins :« Possédant initialement un couple de lapins, combien de couples obtient-on en douze mois si chaque couple engendre tous les mois un nouveau couple à compter du second mois de son existence ? »Ce problème est à l'origine de la suite dont le n\,-ème terme correspond au nombre de paires de lapins au n\,-ème mois. Dans cette population (idéale), on suppose que :le premier mois, il y a juste une paire de lapereaux ;les lapereaux ne sont pubères qu'à partir du deuxième mois ;chaque mois, toute paire susceptible de procréer engendre effectivement une nouvelle paire de lapereaux ;les lapins ne meurent jamais (donc la suite de Fibonacci est strictement croissante).Présentation mathématiqueFormule de récurrenceNotons \mathcal_n le nombre de couples de lapins au mois n\,. Jusqu’à la fin du deuxième mois, la population se limite à un couple (ce qu'on note : \mathcal_1=\mathcal_2=1). Dès le début du troisième mois, le couple de lapins a deux mois et il engendre un autre couple de lapins. On note alors \mathcal_3=2. Plaçons-nous maintenant au mois n\, et cherchons à exprimer ce qu'il en sera deux mois plus tard (n + 2)\, : \mathcal_ désigne la somme des couples de lapins au mois n + 1\, et des couples nouvellement engendrés. Or, n'engendrent au mois (n + 2)\, que les couples pubères, c'est-à-dire ceux qui existent deux mois auparavant. On a donc :\mathcal_=\mathcal_+\mathcal_n.Nous obtenons ainsi la forme récurrente de la suite de Fibonacci : chaque terme de cette suite est la somme des deux termes précédents ; pour obtenir chacun de ces deux termes, il faut faire la somme de leurs termes précédents… et ainsi de suite, jusqu'à ce que ces deux termes soient les deux termes initiaux, \mathcal_1 et \mathcal_2, qui sont connus.Nombres de FibonacciLes premières valeurs des nombres de Fibonacci, dans l'ordre croissant en commençant avec n=0, sont donc données par :1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, ...Les termes de cette suite sont appelés nombres de Fibonacci.\mathcal_0\mathcal_1\mathcal_2\mathcal_3\mathcal_4\mathcal_5\mathcal_6\mathcal_7\mathcal_8\mathcal_9\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_\mathcal_112358132134558914423337761098715972584418167651094617711286574636875025121393...Expression fonctionnelleOn souhaite établir une expression fonctionnelle de la suite de Fibonacci, c'est-à-dire une expression telle que le calcul du nombre de couples pour une valeur de n\, donnée ne présuppose la connaissance d’aucun nombre de couples pour une quelconque autre valeur de n\,, ce que ne permet pas la formule de récurrence. Comme la suite de Fibonacci est récurrente d’ordre deux, on peut écrire son équation caractéristique. On obtient une équation du second degré : x^2 = x + 1\,x^2 - x - 1 =0\,.Le calcul du discriminant de cette équation donne les deux solutions du polynôme :x_1 = \varphi = \frac\, et x_2 = \varphi' = \frac\,. (\varphi\, est le nombre d'or, et \varphi'\, l'opposé de la section dorée).Les suites (\varphi^n) et (\varphi'^n) engendrent alors l'espace vectoriel des suites vérifiant u_=u_+u_n. Il en résulte que :\mathcal_n = \alpha\varphi^n+\beta\varphi'^n (\alpha\, et \beta\, sont des constantes à déterminer à partir de \mathcal_1 et \mathcal_2.)Les conditions initiales \mathcal_1=\mathcal_2=1 conduisent au système suivant :\left\ \alpha + \beta = 0 \\ \alpha - \beta = \frac\end\right.Ce qui donne le résultat suivant :\alpha = \frac et \beta = -\frac.Nous obtenons finalement l'expression fonctionnelle recherchée, qui porte le nom de formule de Binet :\mathcal_n = \frac(\varphi^n-\varphi'^n).Il existe d'autres démonstrations telles que la transformation en Z et la technique des fonctions génératrices.Remarquons qu'une fois découverte cette formule se démontre aussi par récurrence.La suite pour les nombres négatifsEn général, on n'étudie pas les nombres de Fibonacci pour des valeurs négatives de n, bien qu'ils existent et soient facilement déterminables avec la formule récurrente. Il existe ainsi une règle très simple pour calculer ces nombres quand n :si n est pair alors \mathcal_ = -\mathcal_nsi n est impair alors \mathcal_ = \mathcal_nLimite des quotientsComme l'a remarqué Johannes Kepler, le taux de croissance des nombres de Fibonacci, c'est-à-dire \frac__n, converge vers le nombre d'or, noté \varphi\,. Mathématiquement, le résultat s'obtient ainsi :\frac__n |=\lim_\frac-\varphi'^ |- | |=\lim_\varphi\frac |(en simplifiant par \varphi^n\,) |- | |=\varphi\, |(comme \varphi'/\varphi \in ]-1;1[, \lim_(\varphi'/\varphi)^n = 0) |Plus précisément, quand n\, tend vers l'infini, le second terme tend vers zéro car \varphi' \in ]-1 ; 1[, ainsi les nombres de Fibonacci se comportent comme une exponentielle multipliée par le facteur \frac, soit \frac.En fait, dès le rang n=1\,, le deuxième terme  est assez petit pour que les nombres de Fibonacci puissent être obtenus uniquement à partir du premier terme, en arrondissant à l'entier le plus proche.Bases et espaces vectorielsLa dénomination de « suite de Fibonacci généralisée » est attribuée plus généralement à toute fonction \mathcal définie sur \mathbb N vérifiant pour tout entier naturel n\,, \mathcal_=\mathcal_+\mathcal_n. Ces fonctions sont précisément celles pour lesquelles il existe des nombres a'' et ''b, tels que pour tout entier naturel n, \mathcal_n = a\cdot\mathcal_n+b\cdot\mathcal_. Ainsi, l'ensemble des suites de Fibonacci est un espace vectoriel, et les suites (\mathcal_n) et (\mathcal_) en forment une base.Le nombre d'or est la racine positive de l'équation du second degré x^2 - x - 1 = 0\,, ainsi \varphi^2 = \varphi + 1\,. Si on multiplie les deux côtés par \varphi^n\,, on obtient \varphi^ = \varphi^ + \varphi^n\,, donc la fonction n\mapsto \varphi^n est une suite de Fibonacci. La racine négative de l'équation du second degré, \varphi'=1-\varphi\,, possède les mêmes propriétés, et les deux fonctions linéairement indépendantes n\mapsto \varphi^n et n\mapsto \left(1-\varphi\right)^n, forment une autre base de l'espace vectoriel.Algorithmes de calcul des nombres de FibonacciAvec la formule de BinetCalculer les nombres de Fibonacci à partir du nombre d'or est une possibilité très pratique. Néanmoins, la précision de calcul de la racine carrée génère des erreurs d'arrondis pour des valeurs assez grandes dépendant du système utilisé. En général, on obtient les bonnes valeurs jusqu’à \mathcal_ = 308061521170130, sur ordinateur ou sur calculatrice.Notons qu’au-delà de \mathcal_, les calculs dépassent les possibilités de calcul en notation entière, et sont alors représentés en notation scientifique. Les premiers chiffres significatifs sont alors de nouveau bien représentés par cette formule.Détail d’un exemple d'application faisable à partir d'une calculatrice : Calcul de \mathcal_.Le nombre d’or vaut : \frac\ = 1,61803398874989\dotsAppliquons la formule de Binet, (en ne retenant que le terme significatif) soit :\mathcal_ \approx \frac \approx 12586269024,9981Arrondissons à l’entier le plus proche soit :\mathcal_ = 12586269025Algorithme récursif naïfL'implémentation récursive naïve qui suit la définition de la suite de Fibonacci est immédiate. En Python, cela donne :  def fibo(n):   if (n &lt;= 1):  # cas de base
       return n # si n=0 return 0 si n=1 return 1 
   else:         # récurrence
       return fibo(n - 1) + fibo(n - 2)Ce n'est cependant pas une façon judicieuse de calculer la suite de Fibonacci, car on calcule de nombreuses fois les mêmes valeurs (à moins d'employer une technique de mémoization). Le temps de calcul s'avère exponentiel.Algorithme linéaireUn moyen bien plus efficace de calculer la suite de Fibonacci consiste à calculer simultanément deux valeurs consécutives de la suite, c'est-à-dire en commençant avec les deux premières valeurs 0 et 1, et en remplaçant répétitivement le premier nombre par le second, et le second nombre par la somme des deux.En Python, un tel algorithme itératif donne :  def fibo(n):   f_n_1 = 1
   f_n = 0
   for i in range(n):  # n fois
       f_n_1, f_n = (f_n, f_n + f_n_1)
   return f_nDe manière équivalente, on peut écrire une fonction récursive terminale :  def fibo(n, f_n_1 = 1, f_n = 0):   if (n == 0):  # cas de base
       return f_n
   else:         # récurrence
       return fibo(n - 1, f_n, f_n + f_n_1) Le temps de calcul est à chaque fois proportionnel à n et l'espace mémoire occupé constant.Algorithme logarithmiqueEn utilisant la relation matricielle suivante, que l'on montre par récurrence :\begin 1 & 1 \\ 1 & 0 \end^n =      \begin \mathcal F_ &amp; \mathcal F_n \\
                      \mathcal F_n   &amp; \mathcal F_ \endou avec les Propriétés de la suite de Fibonacci, on obtient :\mathcal F_ = 2\mathcal F_ \mathcal F_k + \mathcal F_k^2= (2 \mathcal F_ + \mathcal F_k) \mathcal F_k\mathcal F_ = \mathcal F_^2 + \mathcal F_k^2En prenant bien soin de ne pas calculer deux fois les mêmes éléments, on obtient alors un algorithme dont le temps de calcul est proportionnel au logarithme de n. Voici un exemple de programme en Python :  def fibo2(n):   &quot;&quot;&quot;Renvoie F_, F_n&quot;&quot;&quot;
   if (n == 0):  # cas de base
       return 1, 0  # F_, F_0
   else:         # récurrence
       f_k_1, f_k = fibo2(n//2)        # F_, F_k   avec k = n/2
       f2_k = f_k**2                   # F_k^2
       if n%2 == 0:  # n pair
           return f2_k + f_k_1**2,    f_k*f_k_1*2 + f2_k       # F_, F_
       else:         # n impair
           return f_k*f_k_1*2 + f2_k, (f_k + f_k_1)**2 + f2_k  # F_,   F_def fibo(n):   &quot;&quot;&quot;Renvoie F_n&quot;&quot;&quot;
   return fibo2(n)[1]En retravaillant les relations de récurrence pour le cas pair on obtient :\mathcal F_ = \mathcal F_ - \mathcal F_ = (\mathcal F_^2 + \mathcal F_k^2) - (\mathcal F_k^2 + \mathcal F_^2) = \mathcal F_^2 - \mathcal F_^2Et donc :\forall n \in \mathbb, \mathcal F_ = \mathcal F_\rfloor+1^2 - (-1)^n \mathcal F_\rfloor^2Curiosité algorithmiqueUne façon particulièrement curieuse d'obtenir la suite de Fibonacci est la suivante. On considère la liste de fractions 57/23, 17/39, 130/17, 11/14, 35/11, 19/13, 1/19, 35/2, 13/7, 7. Si on part d'un entier de la forme 2^3^ et si on le multiplie itérativement par la première fraction qui redonne un résultat entier, alors le premier nombre entier de la suite ainsi obtenue qui n'aura que 2 et 3 comme facteurs premiers sera le nombre 2^3^.Par exemple, si on part de 18 = 2^1 3^2, on obtient successivement :18 \times 35/2 = 315315 \times 13/7 = 585585 \times 17/39 = 255255 \times 130/17 = 19501950 \times 17/39 = 850850 \times 130/17 = 65006500 \times 19/13 = 95009500 \times 23/95 = 23002300 \times 57/23 = 57005700 \times 23/95 = 13801380 \times 57/23 = 34203420 \times 23/95 = 828828 \times 57/23 = 20522052 \times 1/19 = 108 = 2^2 3^3Si on itère le procédé, on verra défiler les nombres de Fibonacci dans les exposants des puissances de 2 et 3 décomposant les nombres ainsi obtenus.Propriétés de la suite de FibonacciLa suite de Fibonacci, ainsi définie, présente de remarquables propriétés. En voici quelques-unes, données avec leur démonstration (celles-ci font en général appel au raisonnement par récurrence). Nous donnons également quelques propriétés liant la suite de Fibonacci et les nombres de Lucas.Propriété 1 : \forall (p,q)\in\mathbb^*\times\mathbb, \mathcal_ = \mathcal_\mathcal_q + \mathcal_p\mathcal__\mathcal_0 + \mathcal_p\mathcal_1 = \mathcal_p(rang q=1\,) : \mathcal_\mathcal_1 + \mathcal_p\mathcal_2 = \mathcal_ (Définition de la suite de Fibonacci)Hypothèses de récurrence : (au rang q\,), \mathcal_ = \mathcal_\mathcal_q + \mathcal_p\mathcal_(au rang q+1\,), \mathcal_ = \mathcal_\mathcal_ + \mathcal_p\mathcal_Hérédité (rang q+2\,) :\mathcal_=\mathcal_ + \mathcal_ (Définition de la suite de Fibonacci)\mathcal_=\mathcal_\mathcal_ + \mathcal_p\mathcal_ + \mathcal_\mathcal_ + \mathcal_p\mathcal_  (Hypothèses de récurrence)\mathcal_=\mathcal_(\mathcal_+\mathcal_)+\mathcal_p(\mathcal_+\mathcal_) (Factorisation)\mathcal_=\mathcal_\mathcal_ + \mathcal_p\mathcal_ (Définition)Propriété 2 : \forall (k,n)\in\mathbb\times\mathbb^*, \mathcal_n|\mathcal__n|0 (vrai car tout entier naturel divise 0)Hypothèse de récurrence : au rang k\,, \mathcal_n|\mathcal_Hérédité (rang k+1\,) :\mathcal_=\mathcal_\mathcal_+\mathcal_\mathcal_ (Propriété 1)\mathcal_=\mathcal_n(\lambda\cdot\mathcal_+\mathcal_) (Hypothèse de récurrence)\mathcal_=\mu\cdot\mathcal_nCorollaire : si n\,\neq\,4 et \mathcal_n est premier, n\, est premier.En effet, supposons n\, composé. Si m\, est un diviseur propre de n\,, on a d'après la propriété 2 : \mathcal_m|\mathcal_, contrairement à l'hypothèse que \mathcal_n est premier. Donc n\, est premier.On peut écrire le corollaire comme suit, en désignant par \mathbb l'ensemble des nombres premiers :\forall n \in \mathbb\setminus\, \mathcal_n\in\mathbb\Rightarrown\in\mathbbLa réciproque est fausse, car 2\in\mathbb,\mathcal_2\not\in\mathbb.Propriété 3 : \forall (k,n)\in\mathbb^2/n\gek\ge0, \mathcal_n\mathcal_-\mathcal_k\mathcal_=(-1)^k\mathcal__n\mathcal_1-\mathcal_0\mathcal_=\mathcal_n et (-1)^0\mathcal_n = \mathcal_nHypothèse de récurrence : au rang k, \forall n \geq k,\quad \mathcal_n\mathcal_-\mathcal_k\mathcal_=(-1)^k\mathcal_Hérédité (rang k + 1) :\forall n \geq k+1\mathcal_n\mathcal_-\mathcal_\mathcal_=\mathcal_n(\mathcal_+\mathcal_k) - \mathcal_(\mathcal_n+\mathcal_) (Définition de la suite de Fibonacci)\mathcal_n\mathcal_-\mathcal_\mathcal_=-(\mathcal_\mathcal_-\mathcal_k\mathcal_n) (Associativité, commutativité)\mathcal_n\mathcal_-\mathcal_\mathcal_=-(-1)^k\mathcal_(Hypothèse de récurrence pour n-1\, et  k\,)\mathcal_n\mathcal_-\mathcal_\mathcal_=(-1)^\mathcal_Propriété 4 : \forall (p,q)\in\mathbb^2, \mathcal_p\land\mathcal_q = \mathcal_\landq\landq et \Delta = \mathcal_p\land\mathcal_qp = p'\cdot\delta et q = q'\cdot\delta donc \mathcal_\delta|\mathcal_p et \mathcal_\delta|\mathcal_q (Propriété 2), d'où nous tirons que \mathcal_\delta|\mathcal_p\land\mathcal_q, et donc \mathcal_\delta|\Delta.La généralisation du théorème de Bézout nous permet d’affirmer qu’il existe deux entiers naturels a'' et ''b (a\geb) tels que \delta = a\cdot p - b\cdot q ou \delta = a\cdot q - b\cdot p. Supposons que \delta = a\cdot p - b\cdot q (une démonstration analogue peut être faite pour l'autre cas). D'autre part, \Delta|\mathcal_p et \Delta|\mathcal_q donc \Delta|\mathcal_ et \Delta|\mathcal_ (Propriété 2). Comme \Delta\, en divise aussi toute combinaison linéaire, \Delta|\mathcal_\mathcal_ - \mathcal_\mathcal_ c'est-à-dire \Delta|(-1)^\mathcal_ (Propriété 3), soit donc \Delta|(-1)^\mathcal_ autrement dit \Delta|\mathcal_. Or tout terme de la suite de Fibonacci est positif ou nul, nous en concluons que \Delta=\mathcal_.En particulier, \forall n\in\mathbb,\mathcal_n\land\mathcal_=1 &ensp; c.-à-d. que \mathcal_n \perp \mathcal_Propriété 5 : \forall n\in\mathbb^*, \mathcal_n = \mathcal_+\mathcal_(Précision : les nombres de Lucas  \mathcal_n ont même relation de récurrence mais ont pour initialisation  \mathcal_0 = 2 et  \mathcal_1 = 1)_1 = 1 et \mathcal_0 + \mathcal_2 = 1(n = 2) : \mathcal_2 = 3 et \mathcal_1 + \mathcal_3 = 3Hypothèses de récurrence : au rang n, \mathcal_n = \mathcal_+\mathcal_au rang n+1, \mathcal_ = \mathcal_+\mathcal_Hérédité (rang n + 2) :\mathcal_ + \mathcal_=\mathcal_+\mathcal_+\mathcal_+\mathcal_ (Définition de la suite de Fibonacci)\mathcal_ + \mathcal_=(\mathcal_+\mathcal_)+(\mathcal_+\mathcal_) (Associativité, commutativité)\mathcal_ + \mathcal_=\mathcal_n+\mathcal_ (Hypothèses de récurrence)\mathcal_ + \mathcal_=\mathcal_ (Définition des nombres de Lucas)Propriété 6 : \forall n\in\mathbb-\,2\mathcal_n=\mathcal_+\mathcal__n = \mathcal_ - \mathcal_ + \mathcal_ - \mathcal_  (définition des nombres de Lucas)2\mathcal_n = \mathcal_ - \mathcal_ (simplification)2\mathcal_n = \mathcal_+ \mathcal_ - (\mathcal_ + \mathcal_) (Propriété 5)2\mathcal_n = \mathcal_+ \mathcal_ + \mathcal_ - (\mathcal_ + \mathcal_) (Définition de la suite de Fibonacci)2\mathcal_n = \mathcal_+ \mathcal_ + \mathcal_ - \mathcal_ (Simplification, définition de la suite de Fibonacci)2\mathcal_n = \mathcal_+ \mathcal_ (Simplication)Propriété 7 : \forall n\in\mathbb, \mathcal_\cdotn = \mathcal_\mathcal__0 = 0 et \mathcal_0\mathcal_0 = 0Pour n  0, \mathcal_\cdotn = \mathcal_ \mathcal_\cdotn = \mathcal_\mathcal_n + \mathcal_n\mathcal_ (Propriété 1) \mathcal_\cdotn = \mathcal_n(\mathcal_ + \mathcal_) (Factorisation) \mathcal_\cdotn = \mathcal_n\mathcal_n (Propriété 5)Propriété 8 : \forall n\in\mathbb^*, \mathcal_\cdotn-1 = \mathcal_^2+\mathcal_^2par application directe de la propriété 1 pour p = n et q = n -1Propriété 9 : \forall n\in\mathbb^*, \mathcal_\mathcal_ -\mathcal_n^2= (-1)^n &emsp; (identité de Cassini)_\mathcal_ - \mathcal_\mathcal_ = (-1)^\mathcal_En multipliant par (-1) et en remplaçant \mathcal_ par 1 \mathcal_\mathcal_ - \mathcal_^2 = (-1)^Propriété 10 : \forall n\in\mathbb,1+\sum_^n \mathcal_i=\mathcal_^0 \mathcal_i=1 et \mathcal_2=1Hypothèse de récurrence : au rang n, 1+\sum_^n \mathcal_i=\mathcal_Hérédité (rang n + 1) :1+\sum_^ \mathcal_i=1+\sum_^n \mathcal_i+\mathcal_ (Calcul sur les sommes)1+\sum_^ \mathcal_i=\mathcal_+\mathcal_ (Hypothèse de récurrence)1+\sum_^ \mathcal_i=\mathcal_ (Définition de la suite de Fibonacci)Propriété 11 : \forall n\in\mathbb,1+\sum_^n \mathcal_\cdoti=\mathcal_\cdotn+1^0 \mathcal_\cdoti=1 et \mathcal_1=1Hypothèse de récurrence : au rang n, 1+\sum_^n \mathcal_\cdoti=\mathcal_\cdotn+1Hérédité (rang n + 1) :1+\sum_^ \mathcal_\cdoti=1+\sum_^n \mathcal_\cdoti+\mathcal_\cdotn+2 (Calcul sur les sommes)1+\sum_^ \mathcal_\cdoti=\mathcal_\cdotn+1+\mathcal_\cdotn+2 (Hypothèse de récurrence)1+\sum_^ \mathcal_\cdoti=\mathcal_\cdot(n+1)+1 (Définition de la suite de Fibonacci)Propriété 12 : \forall n\in\mathbb,\mathcal_ = \sum_^  où les  n-k \choose k sont des coefficients binomiaux.^  = 1 et \mathcal_1 = 1(n = 1) : \sum_^  = 1  et \mathcal_2 = 1Hypothèses de récurrence : au rang n, \mathcal_ = \sum_^  au rang n + 1, \mathcal_ = \sum_^ Hérédité (rang n + 2) :\sum_^  = \sum_^  + (Formule du triangle de Pascal)\sum_^  = \sum_^  + \sum_^Car  = 0)\sum_^  = \mathcal_+\sum_^(Hypothèse de récurrence, changement de variable m = k - 1\,)\sum_^  = \mathcal_+ \mathcal_ (Hypothèse de récurrence)\sum_^  = \mathcal_  (Définition de la suite de Fibonacci)Cela signifie que, dans un triangle de Pascal, les nombres de Fibonacci s'obtiennent en sommant les termes situés sur une diagonale (du bas vers la droite)Propriété 13 : \forall n\in\mathbb^*,\varphi^n = \mathcal_n\cdot\varphi + \mathcal__1\cdot\varphi + \mathcal_0Hypothèse de récurrence : au rang n\,, \varphi^n = \mathcal_n\cdot\varphi + \mathcal_Hérédité (rang n + 1\,) :\varphi^= \varphi\cdot\varphi^n (Calculs sur les puissances)\varphi^ =\varphi\cdot(\mathcal_n\cdot\varphi + \mathcal_)\varphi^=\varphi^2\mathcal_n+\varphi\mathcal_ (Distributivité)\varphi^=(1+\varphi)\mathcal_n+\varphi\mathcal_ (Hypothèse de récurrence appliquée au cas n = 2\,)\varphi^=\varphi(\mathcal_+\mathcal_n)+\mathcal_n (Factorisation)\varphi^=\mathcal_\cdot\varphi+\mathcal_n (Définition de la suite de Fibonacci)Propriété 14 : \forall n  2,\mathcal_\mathcal_\mathcal_\mathcal_ - \mathcal_^4 + 1 = 0_n par son expression en fonction de \varphi et \varphi', et de simplifier l'expression. Formules closesLa formule suivante permet de retrouver tous les nombres de Fibonacci (formule de Binet):\forall n \in \mathbb, \mathcal_ = \frac (\varphi^n - \varphi'^n) = \frac \left[ \left( \frac \right)^ - \left( \frac \right)^ \right]La formule suivante permet de retrouver tous les nombres de Lucas (formule de Maillet):\forall n \in \mathbb, \mathcal_ = \varphi^n + \varphi'^n = \left( \frac \right)^ + \left( \frac \right)^Bestiaire de formulesN \ge 1, \mathcal_ = 4^N\cdot\prod_^\left (\cos^2(\frac)+\frac\right )Primalité des nombres de FibonacciOn ignore s'il existe une infinité de nombres de Fibonacci premiers. On sait que \mathcal_n divise \mathcal_\cdotn (voir Propriétés, Propriété 2), et donc que, pour tout n 4\, , si \mathcal_n est premier, alors n\, est premier, mais la réciproque est fausse. Le plus grand nombre de Fibonacci premier connu est \mathcal_ qui possède 126377 chiffres.Il existe des suites (\mathcal_n) vérifiant en même temps les trois conditions suivantes :\mathcal_=\mathcal_+\mathcal_n\mathcal_n et \mathcal_ sont premiers entre eux (ils n'ont aucun diviseur commun).\forall n\in\mathbb,\; \mathcal_n n'est pas premier.Les plus petits exemples connus sont déterminés par :\mathcal_0 = 3794765361567513 = 3\cdot 1264921787189171\mathcal_1 = 20615674205555510 = 2\cdot 5\cdot 5623\cdot 366631232537\mathcal_0 = 1786772701928802632268715130455793 = 2521\cdot 49993\cdot 14177095479037851751198481\mathcal_1 = 1059683225053915111058165141686995 = 3\cdot 5\cdot 84089\cdot 73919059\cdot 150031897\cdot 75754002239ApplicationsLa suite de Fibonacci apparaît dans de nombreux problèmes de dénombrement. Par exemple, le terme d'indice n'' (pour ''n supérieur ou égal à 2) de la suite de Fibonacci permet de dénombrer le nombre de façons de parcourir un chemin de longueur n-1 en faisant des pas de 1 ou 2. Ce problème apparaît d'aillleurs très tôt en Inde, sous le nom maatraameru (montagne de cadence), dans le travail du grammairien de Sanskrit Pingala, le Chhandah-shastra, (l'art de la Prosodie), 450 ou 200 av. J.-C.). Le mathématicien Indien Virahanka en a donné des règles explicites au VIII siècle. Le philosophe Indien Hemachandra (c.1150) (et aussi Gopala) ont revisité le problème de manière assez détaillée. En Sanskrit en effet, les voyelles peuvent être longues (L) ou courtes ©, et Hemachandra a souhaité calculer combien on peut former de cadences différentes d'une longueur donnée, chaque cadence étant définie par les longueurs des voyelles qui la constituent. Si la voyelle longue est deux fois plus longue que la courte, les solutions sont, en fonction de la longueur totale de la cadence :1 C → -- 12 CC,L → -- 23 CCC, CL, LC → -- 34 CCCC, CCL, CLC, ,LCC, LL → -- 55 CCCCC, CCCL, CCLC, CLCC, LCCC, CLL, LCL, LLC → -- 8Le nombre de cadences fait apparaître les termes de la suite de Fibonacci. En effet, une cadence de longueur n'' peut être constituée en ajoutant C à une cadence de longueur ''n-1, ou L à une cadence de longueur n-2. Ainsi le nombre de cadences de longueur n'' est la somme des deux nombres précédents de la série. Ce problème est également équivalent au dénombrement des emballages de longueur ''n donnée, constitué d'articles de longueur 1 ou 2, tel qu'on le trouve par exemple dans The Art of Computer Programming de Donald Knuth.Les nombres de Fibonacci interviennent dans l'étude de l'exécution de l'algorithme d'Euclide qui détermine le plus grand commun diviseur de deux entiers.Matiyasevich a montré que les nombres de Fibonacci pouvaient être définis par une équation diophantienne, ce qui a conduit à la résolution du dixième problème d'Hilbert. En 1975, Jones en a déduit que, pour des valeurs de x'' et ''y entières positives ou nulles, les valeurs positives du polynôme 2xy^4 + x^2y^3 - 2x^3y^2 - y^5 - x^4y + 2y étaient exactement les nombres de Fibonacci. Ces valeurs positives s'obtiennent d'ailleurs en attribuant pour valeurs à x'' et ''y deux nombres de Fibonacci successifs.Les nombres de Fibonacci apparaissent dans la formule des diagonales du triangle de Pascal (voir Propriétés, Propriété 11).Une utilisation intéressante des suites de Fibonacci est la conversion des miles en kilomètres. Par exemple, pour savoir combien de kilomètres font 5 miles, il suffit de considérer le \mathcal_5 = 5 et le suivant \mathcal_6 = 8. 5 miles font environ 8 kilomètres. Cela fonctionne parce que le facteur de conversion des miles aux kilomètres, environ 1,609, est grossièrement égal à \varphi\,,Une bonne approximation d'un rectangle d'or peut être construite à l'aide de carrés dont les côtés sont égaux aux nombres de Fibonacci.Une spirale logarithmique peut être approchée de la manière suivante : on commence à l'origine d'un repère cartésien, on se déplace de \mathcal_1 unités vers la droite, puis de \mathcal_2 unités vers le haut, on se déplace de \mathcal_3 unités vers la gauche, ensuite de \mathcal_4 unités vers le bas, puis de \mathcal_5 unités vers la droite, etc. Cela ressemble à la construction mentionnée dans l'article sur le nombre d'or. Les nombres de Fibonacci apparaissent souvent dans la nature lorsque des spirales logarithmiques sont construites à partir d'une unité discrète, telles que dans les tournesols ou dans les pommes de pin.La plupart des êtres vivants sexués sont issus de deux parents, de sorte que leurs ancêtres à la n'' génération, supposés distincts, sont au nombre de 2''n. Mais les hyménoptères sont tels que les femelles sont issues de deux parents, et les mâles sont issus d'une mère seulement. Il en résulte que leurs ancêtres à la n génération sont constitués :pour les femelles, de \mathcal F_n mâles et \mathcal F_ femelles,pour les mâles, de \mathcal F_ mâles et \mathcal F_n femelles.Le nombre de façons différentes de paver un rectangle 2×N au moyen de dominos 2×1 est \mathcal F_. façons de paver le rectangle 2×N.Considérons le rectangle 2×\mathcal F_ :Ce rectangle 2×(N+1) peut être construit comme la juxtaposition d'un rectangle 2×(N-1) et de 2 dominos placés horizontalement (la longueur du rectangle d'origine est toujours N+1) ; il y a par hypothèse \mathcal F_N façons de paver le rectangle auquel on a retiré les 2 dominos.Ce rectangle 2×(N+1) peut aussi être construit comme la juxtaposition d'un rectangle 2×N et d'un domino placé verticalement (la longueur du rectangle d'origine est toujours N+1) ; il y a par hypothèse \mathcal F_ façons de paver le rectangle auquel on a retiré le domino.Le nombre de façons de paver le rectangle 2×(N+1) est donc la somme \mathcal F_ + \mathcal F_ = \mathcal F_, ce qui termine le raisonnement par récurrence.GénéralisationsIl existe plusieurs voies pour généraliser la suite de Fibonacci : on peut modifier les valeurs initiales, modifier les coefficients de la relation de récurrence ou modifier le nombre de termes (ou ordre) de la relation de récurrence.Suites de Fibonacci généraliséesCe sont des suites qui conservent la même relation de récurrence mais dont les termes initiaux ont changé. Comme l'a démontré la première partie, ces suites sont des combinaisons linéaires des deux suites géométriques (\varphi)^n et (1-\varphi )^n où φ est le nombre d'or. Le quotient de deux termes consécutifs tend toujours vers φ.Parmi ces suites de nombres, il faut signaler les nombres de Lucas obtenus en choisissant comme initialisation : \mathcal_0 =2  et \mathcal_1=1. Cela donne la suite 2, 1, 3, 4, 7, 11, 18, 29, … On trouve parfois une initialisation \mathcal_0 =1 et \mathcal_1=3 qui ne consiste qu'à décaler la suite d'un rang. Ces nombres interviennent dans la résolution d'équations diophantiennes. Ils sont très liés à la suite de Fibonacci, en particulier par la relation suivante : \mathcal_n = \mathcal_ + \mathcal_\, pour tout entier n'' strictement positif (voir Propriétés, ''Propriété 5).Suites de LucasCe sont les suites où la relation de récurrence a changé : elle est devenue U_ = P \cdot U_n + Q \cdot U_Elles sont de deux types selon que l'initialisation est de  u_0 =0  et u_1=1 ou qu'elle est  v_0 =2  et v_1=P.La suite de Fibonacci est alors une suite u'' de Lucas de paramètres P = 1 et Q = 1. La suite des nombres de Lucas est alors une suite ''v de Lucas de paramètres P = 1 et Q = 1.Suites de k-bonacciCe sont des suites dont la relation de récurrence est d'ordre k''. Un terme est la somme des ''k termes qui le précèdent u_ \, = \, u_n + u_ + u_ + \dots +u_Parmi ces suites, on distingue la suite de Tribonacci (récurrence d'ordre 3) et la suite de Tetranacci (récurrence d'ordre 4). Selon ce nouveau classement de suites, la suite de Fibonacci est une suite de 2-bonacci.Si on modifie tout à la fois (initialisation, récurrence, ordre) on arrive à l'ensemble très général des suites à récurrence linéaire.Voir aussiArticles connexesLeonardo PisanoGroupe de FibonacciSuite de PadovanNombre d'orMot de FibonacciLiens externesDivisibilité des nombre de FibonacciSuite de Fibonacci et nombre d'or dans l'ensemble de MandelbrotSuite de Fibonacci dans le dictionnaire des nombresLa Espiral de Alberto DureroLes suites de Fibonacci aléatoires, conférence de Benoît Rittaud à la Cité des sciences et de l'industrie Théorème de ZeckendorfFibonacciar:متتالية فيبوناتشي az:Fibonnaççi ədədləri bg:Числа на Фибоначи bn:ফিবোনাচ্চি রাশিমালা bs:Fibonaccijev broj ca:Successió de Fibonacci cs:Fibonacciho posloupnost da:Fibonacci-tal de:Fibonacci-Folge el:Ακολουθία Φιμπονάτσι en:Fibonacci number eo:Fibonaĉi-nombro es:Sucesión de Fibonacci et:Fibonacci jada eu:Fibonacciren zenbakiak fa:اعداد فیبوناچی fi:Fibonaccin lukujono he:סדרת פיבונאצ'י hi:हेमचन्द्र श्रेणी hr:Fibonaccijev broj hu:Fibonacci-számok id:Bilangan Fibonacci is:Fibonacciruna it:Successione di Fibonacci ja:フィボナッチ数 kaa:Fibonachchi sanları ko:피보나치 수 lt:Fibonačio skaičius lv:Fibonači skaitļi ml:ഫിബനാച്ചി സംഖ്യ ms:Bilangan Fibonacci nl:Rij van Fibonacci no:Fibonaccifølgen pl:Ciąg Fibonacciego pms:Sequensa ëd Fibonacci pt:Número de Fibonacci ro:Numerele Fibonacci ru:Числа Фибоначчи scn:Succissioni di Fibonacci simple:Fibonacci number sk:Fibonacciho postupnosť sl:Fibonaccijevo število sq:Numrat e Fibonaccit sr:Фибоначијев низ sv:Fibonaccital ta:ஃபிபனாச்சி எண்கள் th:เลขฟีโบนัชชี tr:Fibonacci dizisi uk:Послідовність Фібоначчі vi:Dãy Fibonacci vls:Reke van Fibonacci zh:斐波那契数列