 Le code source (ou les sources voire la source) est un ensemble d'instructions écrites dans un langage de programmation informatique de haut niveau, compréhensible par un être humain entraîné, permettant d'obtenir un programme pour un ordinateur.Les systèmes d'exploitation ne peuvent pas directement exploiter le code source ; ils ne peuvent que lancer des exécutables. Le code source doit donc être :Transformé en code compréhensible par la machine par l'opération de compilation ;Transformé en code compréhensible par une machine virtuelle, donc compilé aussiOu être exécuté tel quel par un interpréteur.Le code source peut être public ou privé (voir logiciel libre et logiciel propriétaire).Toutefois, il est techniquement possible, bien que ce soit plus compliqué, de savoir ce que fait un logiciel sans avoir le code source. La légalité des techniques utilisées à ces fins dépend du pays et de l'époque. Elle peut notamment être mise en œuvre pour percer les secrets d'une machine comme l'ES3B.Analogie de la recette de cuisineL'analogie du code source et de la recette de cuisine est souvent employée dans une volonté de vulgarisation. La recette est une liste organisée d'ingrédients en quantités et fonctions définies, dont le but est d'obtenir un résultat visé par le cuisinier, selon une technique déterminée..Ainsi le code source peut être apparenté à une recette de cuisine.Par exemple, si on mange un plat, il est fort probable que l'on puisse deviner les éléments principaux de sa composition et imaginer dans les grandes lignes comment le faire. Néanmoins, pour un plat très raffiné et subtil (comme l'est un programme) on ne pourra pas savoir comment le chef a procédé. Il faut la recette détaillée (pour un programme la recette peut compter plusieurs millions de lignes de code !) pour pouvoir reproduire le plat... ou bien on est obligé d'acheter les plats préparés.Problématiques liées à la langueLe code peut se faire suivant des normes très précises qui sont d'autant plus importantes que le langage de programmation ou les outils utilisés permettent des dérives.Le code s'écrit en utilisant d'une part un langage de programmation (par exemple java), et d'autre part une langue humaine (français, anglais, allemand) pour les commentaires. Plusieurs problématiques concernent la langue : la langue utilisée dans les spécifications et conceptions, la langue utilisée dans les commentaires, la langue utilisée lors de l'exécution dans l'interface homme-machine, la langue utilisée pour nommer les concepts (identificateurs), les langues dans les bibliothèques logicielles utilisées. Ces problématiques sont souvent liées, notamment avec la javadoc, et l'encodage du code source.En France, en 2006, les deux principales langues utilisées sont le français et l'anglais, même si d'autres langues sont utilisées de manière anecdotique.Le français est utilisé pour des raisons légales, mais aussi parce que cette langue facilite la communication, notamment lorsque plusieurs équipes/personnes doivent travailler sur un même projet, et permet donc d'éviter les risques d'erreur, toutefois, l'utilisation du français souffre parfois de limitations techniques des langages (gestion des accents), ou de la présence de concepts anglophones dans les bibliothèques.L'anglais est utilisé parce qu'il s'intègre naturellement avec les langages et bibliothèques déjà existants. Il est également utilisé dans nombre de projets code source libre. Quelques entreprises choisissent la langue anglaise, afin de pouvoir faire sous-traiter les développements dans des pays à bas coût, où les développeurs peuvent ne pas comprendre le français. Il est également utilisé pour des raisons historiques, parce que d'anciens langages ne permettent pas de gérer les accents, et donc les langues autres que l'anglais.Un projet comme OpenOffice.org contient certains commentaires en allemand, ce qui est logique puisqu'étant un projet libre et collaboratif, tout le monde peut y apporter quelque chose et c'est là un beau mélange de cultures et de langues dans la diversité des programmeurs. C'est aussi ce qui fait la force des grands logiciels libres sous licence GPL et BSD, ...Autres problématiquesOn peut classer les normes de rédaction du code en plusieurs sous-catégories :Règles de nommage : elles définissent comment donner un nom explicite et facile à retenir pour les éléments du langage utilisé, par la spécification d'espaces de nommage ou de conventions de nommage.Présentation et formatage des sources : comment produire un code source formaté de manière lisible.Documentation des sources : comment documenter les sources (par exemple par des commentaires ou des outils d'extraction de documentation logicielle)Normes syntaxiques : comment éviter les structures syntaxiques complexes qui réduisent la facilité de compréhension du code, et accroissent les risques de dysfonctionnement.Voir aussiMediaWiki dispose d'une balise &lt;source lang="…"&gt; … &lt;/source&gt; pour mettre en forme du code source, voir la section coloration syntaxique sur la Wikiversité.HomonymieCode source est le titre d'un roman de William Gibson.Catégorie:Programmation informatiqueaf:Bronkode ar:شيفرة مصدرية ast:Códigu fonte be:Крынічны код bg:Изходен код bs:Izvorni kod ca:Codi font cs:Zdrojový kód da:Kildekode de:Quelltext el:Πηγαίος κώδικας en:Source code eo:Fontkodo es:Código fuente et:Lähtekood eu:Iturburu kode fa:کد مبدأ fi:Lähdekoodi gl:Código fonte he:קוד מקור hr:Izvorni kod hu:Forráskód id:Kode sumber it:Codice sorgente ja:ソースコード ko:소스 코드 lt:Išeitinis kodas lv:Pirmkods ms:Kod sumber nl:Broncode nn:Kjeldekode no:Kildekode pl:Kod źródłowy pt:Código fonte ru:Исходный код sh:Izvorni kod simple:Source code sk:Zdrojový kód sl:Izvorna koda sv:Källkod th:ซอร์สโค้ด tr:Kaynak kodu uk:Програмний код vi:Mã nguồn zh:源代码